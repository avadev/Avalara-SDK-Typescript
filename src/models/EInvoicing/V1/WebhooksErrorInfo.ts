/* tslint:disable */
/* eslint-disable */
/**
 * Avalara E-Invoicing API
 * An API that supports sending data for an E-Invoicing compliance use-case.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
/**
 * Information about the error encountered
 * @export
 * @interface WebhooksErrorInfo
 */
export interface WebhooksErrorInfo {
    /**
     * An identifying name for the error.
     * @type {string}
     * @memberof WebhooksErrorInfo
     */
    title?: string;
    /**
     * A conanoical error status.
     * @type {string}
     * @memberof WebhooksErrorInfo
     */
    status?: string;
    /**
     * A detailed description of the error type.
     * @type {string}
     * @memberof WebhooksErrorInfo
     */
    detail?: string;
    /**
     * A detailed description of the specific error ocurrance.
     * @type {string}
     * @memberof WebhooksErrorInfo
     */
    instance?: string;
}



/**
 * Check if a given object implements the WebhooksErrorInfo interface.
 */
export function instanceOfWebhooksErrorInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebhooksErrorInfoFromJSON(json: any): WebhooksErrorInfo {
    return WebhooksErrorInfoFromJSONTyped(json, false);
}

export function WebhooksErrorInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhooksErrorInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'detail': !exists(json, 'detail') ? undefined : json['detail'],
        'instance': !exists(json, 'instance') ? undefined : json['instance'],
    };
}

export function WebhooksErrorInfoToJSON(value?: WebhooksErrorInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'status': value.status,
        'detail': value.detail,
        'instance': value.instance,
    };
}
