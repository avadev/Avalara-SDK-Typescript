/* tslint:disable */
/* eslint-disable */
/**
 * Avalara E-Invoicing API
 * An API that supports sending data for an E-Invoicing compliance use-case.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
import {
    MandateDataInputFieldNamespace,
    MandateDataInputFieldNamespaceFromJSON,
    MandateDataInputFieldNamespaceFromJSONTyped,
    MandateDataInputFieldNamespaceToJSON,
} from './MandateDataInputFieldNamespace';

/**
 * The Data Input Field
 * @export
 * @interface MandateDataInputField
 */
export interface MandateDataInputField {
    /**
     * Field ID
     * @type {string}
     * @memberof MandateDataInputField
     */
    fieldId?: string;
    /**
     * The document type
     * @type {string}
     * @memberof MandateDataInputField
     */
    documentType?: string;
    /**
     * The document version
     * @type {string}
     * @memberof MandateDataInputField
     */
    documentVersion?: string;
    /**
     * Path to this field
     * @type {string}
     * @memberof MandateDataInputField
     */
    path?: string;
    /**
     * The type of path
     * @type {string}
     * @memberof MandateDataInputField
     */
    pathType?: string;
    /**
     * Field name
     * @type {string}
     * @memberof MandateDataInputField
     */
    fieldName?: string;
    /**
     * 
     * @type {MandateDataInputFieldNamespace}
     * @memberof MandateDataInputField
     */
    namespace?: MandateDataInputFieldNamespace;
    /**
     * An example of the content for this field
     * @type {string}
     * @memberof MandateDataInputField
     */
    exampleOrFixedValue?: string;
    /**
     * An Array representing the acceptable values for this field
     * @type {Array<string>}
     * @memberof MandateDataInputField
     */
    acceptedValues?: Array<string>;
    /**
     * An example of the content for this field
     * @type {string}
     * @memberof MandateDataInputField
     */
    documentationLink?: string;
    /**
     * The data type of this field.
     * @type {string}
     * @memberof MandateDataInputField
     */
    dataType?: string;
    /**
     * A description of this field
     * @type {string}
     * @memberof MandateDataInputField
     */
    description?: string;
    /**
     * Determines if the field if Required/Conditional/Optional or not required.
     * @type {string}
     * @memberof MandateDataInputField
     */
    optionality?: string;
    /**
     * Represents the number of times an element can appear within the document
     * @type {string}
     * @memberof MandateDataInputField
     */
    cardinality?: string;
}



/**
 * Check if a given object implements the MandateDataInputField interface.
 */
export function instanceOfMandateDataInputField(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MandateDataInputFieldFromJSON(json: any): MandateDataInputField {
    return MandateDataInputFieldFromJSONTyped(json, false);
}

export function MandateDataInputFieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): MandateDataInputField {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fieldId': !exists(json, 'fieldId') ? undefined : json['fieldId'],
        'documentType': !exists(json, 'documentType') ? undefined : json['documentType'],
        'documentVersion': !exists(json, 'documentVersion') ? undefined : json['documentVersion'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'pathType': !exists(json, 'pathType') ? undefined : json['pathType'],
        'fieldName': !exists(json, 'fieldName') ? undefined : json['fieldName'],
        'namespace': !exists(json, 'namespace') ? undefined : MandateDataInputFieldNamespaceFromJSON(json['namespace']),
        'exampleOrFixedValue': !exists(json, 'exampleOrFixedValue') ? undefined : json['exampleOrFixedValue'],
        'acceptedValues': !exists(json, 'acceptedValues') ? undefined : json['acceptedValues'],
        'documentationLink': !exists(json, 'documentationLink') ? undefined : json['documentationLink'],
        'dataType': !exists(json, 'dataType') ? undefined : json['dataType'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'optionality': !exists(json, 'optionality') ? undefined : json['optionality'],
        'cardinality': !exists(json, 'cardinality') ? undefined : json['cardinality'],
    };
}

export function MandateDataInputFieldToJSON(value?: MandateDataInputField | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fieldId': value.fieldId,
        'documentType': value.documentType,
        'documentVersion': value.documentVersion,
        'path': value.path,
        'pathType': value.pathType,
        'fieldName': value.fieldName,
        'namespace': MandateDataInputFieldNamespaceToJSON(value.namespace),
        'exampleOrFixedValue': value.exampleOrFixedValue,
        'acceptedValues': value.acceptedValues,
        'documentationLink': value.documentationLink,
        'dataType': value.dataType,
        'description': value.description,
        'optionality': value.optionality,
        'cardinality': value.cardinality,
    };
}
