/* tslint:disable */
/* eslint-disable */
/**
 * Avalara E-Invoicing API
 * An API that supports sending data for an E-Invoicing compliance use-case.
 *
 * The version of the OpenAPI document: 1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
/**
 * 
 * @export
 * @interface TaxIdentifierResponseValue
 */
export interface TaxIdentifierResponseValue {
    /**
     * Type of the identifier.
     * @type {string}
     * @memberof TaxIdentifierResponseValue
     */
    identifierType?: string;
    /**
     * The tax identifier of the company.
     * @type {string}
     * @memberof TaxIdentifierResponseValue
     */
    identifier?: string;
    /**
     * Optional field containing additional company-related information such as companyName, companyAddress, blockListed, tradeName, and taxPayerType. It may also include other details specific to the given tax authority. Refer to the GET /tax-identifiers/schema API endpoint for the full response structure for a given country.
     * @type {object}
     * @memberof TaxIdentifierResponseValue
     */
    extensions?: object;
}



/**
 * Check if a given object implements the TaxIdentifierResponseValue interface.
 */
export function instanceOfTaxIdentifierResponseValue(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaxIdentifierResponseValueFromJSON(json: any): TaxIdentifierResponseValue {
    return TaxIdentifierResponseValueFromJSONTyped(json, false);
}

export function TaxIdentifierResponseValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxIdentifierResponseValue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'identifierType': !exists(json, 'identifierType') ? undefined : json['identifierType'],
        'identifier': !exists(json, 'identifier') ? undefined : json['identifier'],
        'extensions': !exists(json, 'extensions') ? undefined : json['extensions'],
    };
}

export function TaxIdentifierResponseValueToJSON(value?: TaxIdentifierResponseValue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'identifierType': value.identifierType,
        'identifier': value.identifier,
        'extensions': value.extensions,
    };
}
