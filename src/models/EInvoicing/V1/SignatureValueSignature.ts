/* tslint:disable */
/* eslint-disable */
/**
 * Avalara E-Invoicing API
 * An API that supports sending data for an E-Invoicing compliance use-case.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
/**
 * 
 * @export
 * @interface SignatureValueSignature
 */
export interface SignatureValueSignature {
    /**
     * 
     * @type {string}
     * @memberof SignatureValueSignature
     */
    type: SignatureValueSignatureTypeEnum;
    /**
     * The algorithm used to create the signature.
     * @type {string}
     * @memberof SignatureValueSignature
     */
    algorithm: SignatureValueSignatureAlgorithmEnum;
    /**
     * Signature of the message.
     * @type {string}
     * @memberof SignatureValueSignature
     */
    value: string;
}

/**
* @export
* @enum {string}
*/
export enum SignatureValueSignatureTypeEnum {
    None = 'none',
    Hmac = 'hmac'
}/**
* @export
* @enum {string}
*/
export enum SignatureValueSignatureAlgorithmEnum {
    Sha256 = 'sha256'
}

/**
 * Check if a given object implements the SignatureValueSignature interface.
 */
export function instanceOfSignatureValueSignature(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "algorithm" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function SignatureValueSignatureFromJSON(json: any): SignatureValueSignature {
    return SignatureValueSignatureFromJSONTyped(json, false);
}

export function SignatureValueSignatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignatureValueSignature {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'algorithm': json['algorithm'],
        'value': json['value'],
    };
}

export function SignatureValueSignatureToJSON(value?: SignatureValueSignature | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'algorithm': value.algorithm,
        'value': value.value,
    };
}
