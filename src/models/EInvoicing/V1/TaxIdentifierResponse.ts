/* tslint:disable */
/* eslint-disable */
/**
 * Avalara E-Invoicing API
 * An API that supports sending data for an E-Invoicing compliance use-case.
 *
 * The version of the OpenAPI document: 1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
import {
    TaxIdentifierResponseValue,
    TaxIdentifierResponseValueFromJSON,
    TaxIdentifierResponseValueFromJSONTyped,
    TaxIdentifierResponseValueToJSON,
} from './TaxIdentifierResponseValue';

/**
 * Represents the response for a tax identifier validation request.
 * @export
 * @interface TaxIdentifierResponse
 */
export interface TaxIdentifierResponse {
    /**
     * The two-letter ISO-3166 country code of the tax identifier.
     * @type {string}
     * @memberof TaxIdentifierResponse
     */
    countryCode: string;
    /**
     * 
     * @type {TaxIdentifierResponseValue}
     * @memberof TaxIdentifierResponse
     */
    value?: TaxIdentifierResponseValue;
}



/**
 * Check if a given object implements the TaxIdentifierResponse interface.
 */
export function instanceOfTaxIdentifierResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "countryCode" in value;

    return isInstance;
}

export function TaxIdentifierResponseFromJSON(json: any): TaxIdentifierResponse {
    return TaxIdentifierResponseFromJSONTyped(json, false);
}

export function TaxIdentifierResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxIdentifierResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countryCode': json['countryCode'],
        'value': !exists(json, 'value') ? undefined : TaxIdentifierResponseValueFromJSON(json['value']),
    };
}

export function TaxIdentifierResponseToJSON(value?: TaxIdentifierResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'countryCode': value.countryCode,
        'value': TaxIdentifierResponseValueToJSON(value.value),
    };
}
