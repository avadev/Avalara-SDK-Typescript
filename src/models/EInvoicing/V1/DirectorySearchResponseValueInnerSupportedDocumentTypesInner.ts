/* tslint:disable */
/* eslint-disable */
/**
 * Avalara E-Invoicing API
 * An API that supports sending data for an E-Invoicing compliance use-case.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
/**
 * 
 * @export
 * @interface DirectorySearchResponseValueInnerSupportedDocumentTypesInner
 */
export interface DirectorySearchResponseValueInnerSupportedDocumentTypesInner {
    /**
     * Document type name.
     * @type {string}
     * @memberof DirectorySearchResponseValueInnerSupportedDocumentTypesInner
     */
    name?: string;
    /**
     * Document type identifier.
     * @type {string}
     * @memberof DirectorySearchResponseValueInnerSupportedDocumentTypesInner
     */
    value?: string;
    /**
     * Does trading partner support receiving this document type
     * @type {boolean}
     * @memberof DirectorySearchResponseValueInnerSupportedDocumentTypesInner
     */
    supportedByTradingPartner?: boolean;
    /**
     * Does avalara support exchanging this document type
     * @type {boolean}
     * @memberof DirectorySearchResponseValueInnerSupportedDocumentTypesInner
     */
    supportedByAvalara?: boolean;
}



/**
 * Check if a given object implements the DirectorySearchResponseValueInnerSupportedDocumentTypesInner interface.
 */
export function instanceOfDirectorySearchResponseValueInnerSupportedDocumentTypesInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DirectorySearchResponseValueInnerSupportedDocumentTypesInnerFromJSON(json: any): DirectorySearchResponseValueInnerSupportedDocumentTypesInner {
    return DirectorySearchResponseValueInnerSupportedDocumentTypesInnerFromJSONTyped(json, false);
}

export function DirectorySearchResponseValueInnerSupportedDocumentTypesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): DirectorySearchResponseValueInnerSupportedDocumentTypesInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'supportedByTradingPartner': !exists(json, 'supportedByTradingPartner') ? undefined : json['supportedByTradingPartner'],
        'supportedByAvalara': !exists(json, 'supportedByAvalara') ? undefined : json['supportedByAvalara'],
    };
}

export function DirectorySearchResponseValueInnerSupportedDocumentTypesInnerToJSON(value?: DirectorySearchResponseValueInnerSupportedDocumentTypesInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'value': value.value,
        'supportedByTradingPartner': value.supportedByTradingPartner,
        'supportedByAvalara': value.supportedByAvalara,
    };
}
