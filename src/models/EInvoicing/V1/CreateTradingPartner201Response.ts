/* tslint:disable */
/* eslint-disable */
/**
 * Avalara E-Invoicing API
 * An API that supports sending data for an E-Invoicing compliance use-case.
 *
 * The version of the OpenAPI document: 1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
/**
 * 
 * @export
 * @interface CreateTradingPartner201Response
 */
export interface CreateTradingPartner201Response {
    /**
     * Avalara unique ID of the participant in the directory.
     * @type {string}
     * @memberof CreateTradingPartner201Response
     */
    id?: string;
    /**
     * The status of the create operation.
     * @type {string}
     * @memberof CreateTradingPartner201Response
     */
    status?: string;
    /**
     * A human-readable message providing additional context or feedback about the outcome of the operation.
     * @type {string}
     * @memberof CreateTradingPartner201Response
     */
    message?: string;
}



/**
 * Check if a given object implements the CreateTradingPartner201Response interface.
 */
export function instanceOfCreateTradingPartner201Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreateTradingPartner201ResponseFromJSON(json: any): CreateTradingPartner201Response {
    return CreateTradingPartner201ResponseFromJSONTyped(json, false);
}

export function CreateTradingPartner201ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTradingPartner201Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function CreateTradingPartner201ResponseToJSON(value?: CreateTradingPartner201Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'status': value.status,
        'message': value.message,
    };
}
