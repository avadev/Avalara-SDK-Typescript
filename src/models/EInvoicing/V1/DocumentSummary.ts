/* tslint:disable */
/* eslint-disable */
/**
 * Avalara E-Invoicing API
 * An API that supports sending data for an E-Invoicing compliance use-case.
 *
 * The version of the OpenAPI document: 1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
/**
 * Displays a summary of information about the document
 * @export
 * @interface DocumentSummary
 */
export interface DocumentSummary {
    /**
     * The unique ID for this document
     * @type {string}
     * @memberof DocumentSummary
     */
    id?: string;
    /**
     * Unique identifier that represents the company within the system.
     * @type {string}
     * @memberof DocumentSummary
     */
    companyId?: string;
    /**
     * The date and time when the document was processed, displayed in the format YYYY-MM-DDThh:mm:ss
     * @type {string}
     * @memberof DocumentSummary
     */
    processDateTime?: string;
    /**
     * The Document status
     * @type {string}
     * @memberof DocumentSummary
     */
    status?: string;
    /**
     * The name of the supplier in the transaction
     * @type {string}
     * @memberof DocumentSummary
     */
    supplierName?: string;
    /**
     * The name of the customer in the transaction
     * @type {string}
     * @memberof DocumentSummary
     */
    customerName?: string;
    /**
     * The document type
     * @type {string}
     * @memberof DocumentSummary
     */
    documentType?: string;
    /**
     * The document version
     * @type {string}
     * @memberof DocumentSummary
     */
    documentVersion?: string;
    /**
     * The document number
     * @type {string}
     * @memberof DocumentSummary
     */
    documentNumber?: string;
    /**
     * The document issue date
     * @type {string}
     * @memberof DocumentSummary
     */
    documentDate?: string;
    /**
     * The document direction, where issued = `out` and received = `in`
     * @type {string}
     * @memberof DocumentSummary
     */
    flow?: string;
    /**
     * The two-letter ISO-3166 country code for the country where the document is being submitted
     * @type {string}
     * @memberof DocumentSummary
     */
    countryCode?: string;
    /**
     * The e-invoicing mandate for the specified country
     * @type {string}
     * @memberof DocumentSummary
     */
    countryMandate?: string;
    /**
     * The interface where the document is sent
     * @type {string}
     * @memberof DocumentSummary
     */
    _interface?: string;
    /**
     * The document recipient based on the interface
     * @type {string}
     * @memberof DocumentSummary
     */
    receiver?: string;
}



/**
 * Check if a given object implements the DocumentSummary interface.
 */
export function instanceOfDocumentSummary(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DocumentSummaryFromJSON(json: any): DocumentSummary {
    return DocumentSummaryFromJSONTyped(json, false);
}

export function DocumentSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'companyId': !exists(json, 'companyId') ? undefined : json['companyId'],
        'processDateTime': !exists(json, 'processDateTime') ? undefined : json['processDateTime'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'supplierName': !exists(json, 'supplierName') ? undefined : json['supplierName'],
        'customerName': !exists(json, 'customerName') ? undefined : json['customerName'],
        'documentType': !exists(json, 'documentType') ? undefined : json['documentType'],
        'documentVersion': !exists(json, 'documentVersion') ? undefined : json['documentVersion'],
        'documentNumber': !exists(json, 'documentNumber') ? undefined : json['documentNumber'],
        'documentDate': !exists(json, 'documentDate') ? undefined : json['documentDate'],
        'flow': !exists(json, 'flow') ? undefined : json['flow'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'countryMandate': !exists(json, 'countryMandate') ? undefined : json['countryMandate'],
        '_interface': !exists(json, 'interface') ? undefined : json['interface'],
        'receiver': !exists(json, 'receiver') ? undefined : json['receiver'],
    };
}

export function DocumentSummaryToJSON(value?: DocumentSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'companyId': value.companyId,
        'processDateTime': value.processDateTime,
        'status': value.status,
        'supplierName': value.supplierName,
        'customerName': value.customerName,
        'documentType': value.documentType,
        'documentVersion': value.documentVersion,
        'documentNumber': value.documentNumber,
        'documentDate': value.documentDate,
        'flow': value.flow,
        'countryCode': value.countryCode,
        'countryMandate': value.countryMandate,
        'interface': value._interface,
        'receiver': value.receiver,
    };
}
