/* tslint:disable */
/* eslint-disable */
/**
 * Avalara E-Invoicing API
 * An API that supports sending data for an E-Invoicing compliance use-case.
 *
 * The version of the OpenAPI document: 1.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
import {
    Mandate,
    MandateFromJSON,
    MandateFromJSONTyped,
    MandateToJSON,
} from './Mandate';

/**
 * Mandate list response schema
 * @export
 * @interface MandatesResponse
 */
export interface MandatesResponse {
    /**
     * Total count of results
     * @type {number}
     * @memberof MandatesResponse
     */
    recordsetCount?: number;
    /**
     * 
     * @type {string}
     * @memberof MandatesResponse
     */
    nextLink?: string | null;
    /**
     * Mandates schema
     * @type {Array<Mandate>}
     * @memberof MandatesResponse
     */
    value?: Array<Mandate>;
}



/**
 * Check if a given object implements the MandatesResponse interface.
 */
export function instanceOfMandatesResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MandatesResponseFromJSON(json: any): MandatesResponse {
    return MandatesResponseFromJSONTyped(json, false);
}

export function MandatesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MandatesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'recordsetCount': !exists(json, '@recordsetCount') ? undefined : json['@recordsetCount'],
        'nextLink': !exists(json, '@nextLink') ? undefined : json['@nextLink'],
        'value': !exists(json, 'value') ? undefined : ((json['value'] as Array<any>)?.map(MandateFromJSON)),
    };
}

export function MandatesResponseToJSON(value?: MandatesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '@recordsetCount': value.recordsetCount,
        '@nextLink': value.nextLink,
        'value': value.value === undefined ? undefined : ((value.value as Array<any>)?.map(MandateToJSON)),
    };
}
