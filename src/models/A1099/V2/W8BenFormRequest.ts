/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
/**
 * 
 * @export
 * @interface W8BenFormRequest
 */
export interface W8BenFormRequest {
    /**
     * The form type (always "w8ben" for this model).
     * @type {string}
     * @memberof W8BenFormRequest
     */
    readonly type?: W8BenFormRequestTypeEnum;
    /**
     * The name of the individual or entity associated with the form.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    name: string;
    /**
     * The country of citizenship.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    citizenshipCountry: string;
    /**
     * The residential address of the individual or entity.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    residenceAddress?: string;
    /**
     * The city of residence.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    residenceCity?: string;
    /**
     * The state of residence.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    residenceState?: string | null;
    /**
     * The ZIP code of the residence.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    residenceZip?: string;
    /**
     * The country of residence.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    residenceCountry: string;
    /**
     * Indicates whether the residence address is the mailing address.
     * @type {boolean}
     * @memberof W8BenFormRequest
     */
    residenceIsMailing?: boolean;
    /**
     * The mailing address.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    mailingAddress?: string | null;
    /**
     * The city of the mailing address.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    mailingCity?: string | null;
    /**
     * The state of the mailing address.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    mailingState?: string | null;
    /**
     * The ZIP code of the mailing address.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    mailingZip?: string | null;
    /**
     * The country of the mailing address.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    mailingCountry: string | null;
    /**
     * The taxpayer identification number (TIN).
     * @type {string}
     * @memberof W8BenFormRequest
     */
    tin?: string | null;
    /**
     * Indicates whether a foreign TIN is not legally required.
     * @type {boolean}
     * @memberof W8BenFormRequest
     */
    foreignTinNotRequired?: boolean;
    /**
     * The foreign taxpayer identification number (TIN).
     * @type {string}
     * @memberof W8BenFormRequest
     */
    foreignTin?: string | null;
    /**
     * A reference number for the form.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    referenceNumber?: string | null;
    /**
     * The birthday of the individual associated with the form.
     * @type {Date}
     * @memberof W8BenFormRequest
     */
    birthday?: Date | null;
    /**
     * The country for which the treaty applies.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    treatyCountry?: string;
    /**
     * The specific article of the treaty being claimed.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    treatyArticle?: string | null;
    /**
     * The reasons for claiming treaty benefits.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    treatyReasons?: string | null;
    /**
     * The withholding rate applied as per the treaty.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    withholdingRate?: string | null;
    /**
     * The type of income covered by the treaty.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    incomeType?: string | null;
    /**
     * The name of the signer of the form.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    signerName?: string | null;
    /**
     * The date when e-delivery was consented.
     * @type {Date}
     * @memberof W8BenFormRequest
     */
    eDeliveryConsentedAt?: Date | null;
    /**
     * The signature of the form.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    signature?: string | null;
    /**
     * The ID of the associated company. Required when creating a form.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    companyId?: string;
    /**
     * A reference identifier for the form.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    referenceId?: string | null;
    /**
     * The email address of the individual associated with the form.
     * @type {string}
     * @memberof W8BenFormRequest
     */
    email?: string | null;
}

/**
* @export
* @enum {string}
*/
export enum W8BenFormRequestTypeEnum {
    W4 = 'W4',
    W8Ben = 'W8Ben',
    W8BenE = 'W8BenE',
    W8Imy = 'W8Imy',
    W9 = 'W9'
}

/**
 * Check if a given object implements the W8BenFormRequest interface.
 */
export function instanceOfW8BenFormRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "citizenshipCountry" in value;
    isInstance = isInstance && "residenceCountry" in value;
    isInstance = isInstance && "mailingCountry" in value;

    return isInstance;
}

export function W8BenFormRequestFromJSON(json: any): W8BenFormRequest {
    return W8BenFormRequestFromJSONTyped(json, false);
}

export function W8BenFormRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): W8BenFormRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'name': json['name'],
        'citizenshipCountry': json['citizenshipCountry'],
        'residenceAddress': !exists(json, 'residenceAddress') ? undefined : json['residenceAddress'],
        'residenceCity': !exists(json, 'residenceCity') ? undefined : json['residenceCity'],
        'residenceState': !exists(json, 'residenceState') ? undefined : json['residenceState'],
        'residenceZip': !exists(json, 'residenceZip') ? undefined : json['residenceZip'],
        'residenceCountry': json['residenceCountry'],
        'residenceIsMailing': !exists(json, 'residenceIsMailing') ? undefined : json['residenceIsMailing'],
        'mailingAddress': !exists(json, 'mailingAddress') ? undefined : json['mailingAddress'],
        'mailingCity': !exists(json, 'mailingCity') ? undefined : json['mailingCity'],
        'mailingState': !exists(json, 'mailingState') ? undefined : json['mailingState'],
        'mailingZip': !exists(json, 'mailingZip') ? undefined : json['mailingZip'],
        'mailingCountry': json['mailingCountry'],
        'tin': !exists(json, 'tin') ? undefined : json['tin'],
        'foreignTinNotRequired': !exists(json, 'foreignTinNotRequired') ? undefined : json['foreignTinNotRequired'],
        'foreignTin': !exists(json, 'foreignTin') ? undefined : json['foreignTin'],
        'referenceNumber': !exists(json, 'referenceNumber') ? undefined : json['referenceNumber'],
        'birthday': !exists(json, 'birthday') ? undefined : (json['birthday'] === null ? null : new Date(json['birthday'])),
        'treatyCountry': !exists(json, 'treatyCountry') ? undefined : json['treatyCountry'],
        'treatyArticle': !exists(json, 'treatyArticle') ? undefined : json['treatyArticle'],
        'treatyReasons': !exists(json, 'treatyReasons') ? undefined : json['treatyReasons'],
        'withholdingRate': !exists(json, 'withholdingRate') ? undefined : json['withholdingRate'],
        'incomeType': !exists(json, 'incomeType') ? undefined : json['incomeType'],
        'signerName': !exists(json, 'signerName') ? undefined : json['signerName'],
        'eDeliveryConsentedAt': !exists(json, 'eDeliveryConsentedAt') ? undefined : (json['eDeliveryConsentedAt'] === null ? null : new Date(json['eDeliveryConsentedAt'])),
        'signature': !exists(json, 'signature') ? undefined : json['signature'],
        'companyId': !exists(json, 'companyId') ? undefined : json['companyId'],
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
        'email': !exists(json, 'email') ? undefined : json['email'],
    };
}

export function W8BenFormRequestToJSON(value?: W8BenFormRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'citizenshipCountry': value.citizenshipCountry,
        'residenceAddress': value.residenceAddress,
        'residenceCity': value.residenceCity,
        'residenceState': value.residenceState,
        'residenceZip': value.residenceZip,
        'residenceCountry': value.residenceCountry,
        'residenceIsMailing': value.residenceIsMailing,
        'mailingAddress': value.mailingAddress,
        'mailingCity': value.mailingCity,
        'mailingState': value.mailingState,
        'mailingZip': value.mailingZip,
        'mailingCountry': value.mailingCountry,
        'tin': value.tin,
        'foreignTinNotRequired': value.foreignTinNotRequired,
        'foreignTin': value.foreignTin,
        'referenceNumber': value.referenceNumber,
        'birthday': value.birthday === undefined ? undefined : (value.birthday === null ? null : value.birthday.toISOString().substr(0,10)),
        'treatyCountry': value.treatyCountry,
        'treatyArticle': value.treatyArticle,
        'treatyReasons': value.treatyReasons,
        'withholdingRate': value.withholdingRate,
        'incomeType': value.incomeType,
        'signerName': value.signerName,
        'eDeliveryConsentedAt': value.eDeliveryConsentedAt === undefined ? undefined : (value.eDeliveryConsentedAt === null ? null : value.eDeliveryConsentedAt.toISOString()),
        'signature': value.signature,
        'companyId': value.companyId,
        'referenceId': value.referenceId,
        'email': value.email,
    };
}
