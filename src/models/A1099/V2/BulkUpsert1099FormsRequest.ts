/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Use **username/password** or generate a **license key** from: *Avalara Portal ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Form1095BList } from './Form1095BList';
import {
    instanceOfForm1095BList,
    Form1095BListFromJSON,
    Form1095BListFromJSONTyped,
    Form1095BListToJSON,
} from './Form1095BList';
import type { Form1099DivList } from './Form1099DivList';
import {
    instanceOfForm1099DivList,
    Form1099DivListFromJSON,
    Form1099DivListFromJSONTyped,
    Form1099DivListToJSON,
} from './Form1099DivList';
import type { Form1099KList } from './Form1099KList';
import {
    instanceOfForm1099KList,
    Form1099KListFromJSON,
    Form1099KListFromJSONTyped,
    Form1099KListToJSON,
} from './Form1099KList';
import type { Form1099MiscList } from './Form1099MiscList';
import {
    instanceOfForm1099MiscList,
    Form1099MiscListFromJSON,
    Form1099MiscListFromJSONTyped,
    Form1099MiscListToJSON,
} from './Form1099MiscList';
import type { Form1099NecList } from './Form1099NecList';
import {
    instanceOfForm1099NecList,
    Form1099NecListFromJSON,
    Form1099NecListFromJSONTyped,
    Form1099NecListToJSON,
} from './Form1099NecList';
import type { Form1099RList } from './Form1099RList';
import {
    instanceOfForm1099RList,
    Form1099RListFromJSON,
    Form1099RListFromJSONTyped,
    Form1099RListToJSON,
} from './Form1099RList';

/**
 * @type BulkUpsert1099FormsRequest
 * 
 * @export
 */
export type BulkUpsert1099FormsRequest = Form1095BList | Form1099DivList | Form1099KList | Form1099MiscList | Form1099NecList | Form1099RList;

export function BulkUpsert1099FormsRequestFromJSON(json: any): BulkUpsert1099FormsRequest {
    return BulkUpsert1099FormsRequestFromJSONTyped(json, false);
}

export function BulkUpsert1099FormsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkUpsert1099FormsRequest {
    if (json == null) {
        return json;
    }
    if (instanceOfForm1095BList(json)) {
        return Form1095BListFromJSONTyped(json, true);
    }
    if (instanceOfForm1099DivList(json)) {
        return Form1099DivListFromJSONTyped(json, true);
    }
    if (instanceOfForm1099KList(json)) {
        return Form1099KListFromJSONTyped(json, true);
    }
    if (instanceOfForm1099MiscList(json)) {
        return Form1099MiscListFromJSONTyped(json, true);
    }
    if (instanceOfForm1099NecList(json)) {
        return Form1099NecListFromJSONTyped(json, true);
    }
    if (instanceOfForm1099RList(json)) {
        return Form1099RListFromJSONTyped(json, true);
    }
}

export function BulkUpsert1099FormsRequestToJSON(value?: BulkUpsert1099FormsRequest | null): any {
    if (value == null) {
        return value;
    }

    if (instanceOfForm1095BList(value)) {
        return Form1095BListToJSON(value as Form1095BList);
    }
    if (instanceOfForm1099DivList(value)) {
        return Form1099DivListToJSON(value as Form1099DivList);
    }
    if (instanceOfForm1099KList(value)) {
        return Form1099KListToJSON(value as Form1099KList);
    }
    if (instanceOfForm1099MiscList(value)) {
        return Form1099MiscListToJSON(value as Form1099MiscList);
    }
    if (instanceOfForm1099NecList(value)) {
        return Form1099NecListToJSON(value as Form1099NecList);
    }
    if (instanceOfForm1099RList(value)) {
        return Form1099RListToJSON(value as Form1099RList);
    }

    return {};
}

