/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
import {
    EntryStatusResponse,
    EntryStatusResponseFromJSON,
    EntryStatusResponseFromJSONTyped,
    EntryStatusResponseToJSON,
} from './EntryStatusResponse';

import {
     W4FormResponseFromJSONTyped,
     W8BenEFormResponseFromJSONTyped,
     W8BenFormResponseFromJSONTyped,
     W8ImyFormResponseFromJSONTyped,
     W9FormResponseFromJSONTyped
} from './';

/**
 * 
 * @export
 * @interface W9FormBaseResponse
 */
export interface W9FormBaseResponse {
    /**
     * The unique identifier for the form.
     * @type {string}
     * @memberof W9FormBaseResponse
     */
    id?: string;
    /**
     * The entry status information for the form.
     * @type {EntryStatusResponse}
     * @memberof W9FormBaseResponse
     */
    entryStatus?: EntryStatusResponse;
    /**
     * A reference identifier for the form.
     * @type {string}
     * @memberof W9FormBaseResponse
     */
    referenceId?: string | null;
    /**
     * The ID of the associated company.
     * @type {string}
     * @memberof W9FormBaseResponse
     */
    companyId?: string;
    /**
     * The display name associated with the form.
     * @type {string}
     * @memberof W9FormBaseResponse
     */
    displayName?: string;
    /**
     * The email address of the individual associated with the form.
     * @type {string}
     * @memberof W9FormBaseResponse
     */
    email?: string | null;
    /**
     * Indicates whether the form is archived.
     * @type {boolean}
     * @memberof W9FormBaseResponse
     */
    archived?: boolean;
    /**
     * Form ID of previous version.
     * @type {string}
     * @memberof W9FormBaseResponse
     */
    ancestorId?: string | null;
    /**
     * The signature of the form.
     * @type {string}
     * @memberof W9FormBaseResponse
     */
    signature?: string | null;
    /**
     * The date the form was signed.
     * @type {Date}
     * @memberof W9FormBaseResponse
     */
    signedDate?: Date | null;
    /**
     * The date when e-delivery was consented.
     * @type {Date}
     * @memberof W9FormBaseResponse
     */
    eDeliveryConsentedAt?: Date | null;
    /**
     * The creation date of the form.
     * @type {Date}
     * @memberof W9FormBaseResponse
     */
    createdAt?: Date;
    /**
     * The last updated date of the form.
     * @type {Date}
     * @memberof W9FormBaseResponse
     */
    updatedAt?: Date;
    /**
     * The type of the response object.
     * @type {string}
     * @memberof W9FormBaseResponse
     */
    type?: string;
}



/**
 * Check if a given object implements the W9FormBaseResponse interface.
 */
export function instanceOfW9FormBaseResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function W9FormBaseResponseFromJSON(json: any): W9FormBaseResponse {
    return W9FormBaseResponseFromJSONTyped(json, false);
}

export function W9FormBaseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): W9FormBaseResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['type'] === 'W4FormResponse') {
            return W4FormResponseFromJSONTyped(json, true);
        }
        if (json['type'] === 'W8BenEFormResponse') {
            return W8BenEFormResponseFromJSONTyped(json, true);
        }
        if (json['type'] === 'W8BenFormResponse') {
            return W8BenFormResponseFromJSONTyped(json, true);
        }
        if (json['type'] === 'W8ImyFormResponse') {
            return W8ImyFormResponseFromJSONTyped(json, true);
        }
        if (json['type'] === 'W9FormResponse') {
            return W9FormResponseFromJSONTyped(json, true);
        }
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'entryStatus': !exists(json, 'entryStatus') ? undefined : EntryStatusResponseFromJSON(json['entryStatus']),
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
        'companyId': !exists(json, 'companyId') ? undefined : json['companyId'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'archived': !exists(json, 'archived') ? undefined : json['archived'],
        'ancestorId': !exists(json, 'ancestorId') ? undefined : json['ancestorId'],
        'signature': !exists(json, 'signature') ? undefined : json['signature'],
        'signedDate': !exists(json, 'signedDate') ? undefined : (json['signedDate'] === null ? null : new Date(json['signedDate'])),
        'eDeliveryConsentedAt': !exists(json, 'eDeliveryConsentedAt') ? undefined : (json['eDeliveryConsentedAt'] === null ? null : new Date(json['eDeliveryConsentedAt'])),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function W9FormBaseResponseToJSON(value?: W9FormBaseResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'entryStatus': EntryStatusResponseToJSON(value.entryStatus),
        'referenceId': value.referenceId,
        'companyId': value.companyId,
        'displayName': value.displayName,
        'email': value.email,
        'archived': value.archived,
        'ancestorId': value.ancestorId,
        'signature': value.signature,
        'signedDate': value.signedDate === undefined ? undefined : (value.signedDate === null ? null : value.signedDate.toISOString()),
        'eDeliveryConsentedAt': value.eDeliveryConsentedAt === undefined ? undefined : (value.eDeliveryConsentedAt === null ? null : value.eDeliveryConsentedAt.toISOString()),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'type': value.type,
    };
}
