/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { HttpValidationProblemDetails } from './HttpValidationProblemDetails';
import {
    instanceOfHttpValidationProblemDetails,
    HttpValidationProblemDetailsFromJSON,
    HttpValidationProblemDetailsFromJSONTyped,
    HttpValidationProblemDetailsToJSON,
} from './HttpValidationProblemDetails';
import type { ProblemDetails } from './ProblemDetails';
import {
    instanceOfProblemDetails,
    ProblemDetailsFromJSON,
    ProblemDetailsFromJSONTyped,
    ProblemDetailsToJSON,
} from './ProblemDetails';

/**
 * @type ErrorResponseErrorsInner
 * 
 * @export
 */
export type ErrorResponseErrorsInner = HttpValidationProblemDetails | ProblemDetails;

export function ErrorResponseErrorsInnerFromJSON(json: any): ErrorResponseErrorsInner {
    return ErrorResponseErrorsInnerFromJSONTyped(json, false);
}

export function ErrorResponseErrorsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponseErrorsInner {
    if (json == null) {
        return json;
    }
    if (instanceOfHttpValidationProblemDetails(json)) {
        return HttpValidationProblemDetailsFromJSONTyped(json, true);
    }
    if (instanceOfProblemDetails(json)) {
        return ProblemDetailsFromJSONTyped(json, true);
    }
}

export function ErrorResponseErrorsInnerToJSON(value?: ErrorResponseErrorsInner | null): any {
    if (value == null) {
        return value;
    }

    if (instanceOfHttpValidationProblemDetails(value)) {
        return HttpValidationProblemDetailsToJSON(value as HttpValidationProblemDetails);
    }
    if (instanceOfProblemDetails(value)) {
        return ProblemDetailsToJSON(value as ProblemDetails);
    }

    return {};
}

