/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
/**
 * 
 * @export
 * @interface W8BenEFormMinimalRequest
 */
export interface W8BenEFormMinimalRequest {
    /**
     * The form type (always "w8bene" for this model).
     * @type {string}
     * @memberof W8BenEFormMinimalRequest
     */
    readonly type?: W8BenEFormMinimalRequestTypeEnum;
    /**
     * The email address of the individual associated with the form.
     * @type {string}
     * @memberof W8BenEFormMinimalRequest
     */
    email: string;
    /**
     * The name of the individual or entity associated with the form.
     * @type {string}
     * @memberof W8BenEFormMinimalRequest
     */
    name: string;
    /**
     * A reference number for the form.
     * @type {string}
     * @memberof W8BenEFormMinimalRequest
     */
    referenceNumber?: string | null;
    /**
     * The ID of the associated company. Required when creating a form.
     * @type {string}
     * @memberof W8BenEFormMinimalRequest
     */
    companyId?: string;
    /**
     * A reference identifier for the form.
     * @type {string}
     * @memberof W8BenEFormMinimalRequest
     */
    referenceId?: string | null;
}

/**
* @export
* @enum {string}
*/
export enum W8BenEFormMinimalRequestTypeEnum {
    W4 = 'W4',
    W8Ben = 'W8Ben',
    W8BenE = 'W8BenE',
    W8Imy = 'W8Imy',
    W9 = 'W9'
}

/**
 * Check if a given object implements the W8BenEFormMinimalRequest interface.
 */
export function instanceOfW8BenEFormMinimalRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function W8BenEFormMinimalRequestFromJSON(json: any): W8BenEFormMinimalRequest {
    return W8BenEFormMinimalRequestFromJSONTyped(json, false);
}

export function W8BenEFormMinimalRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): W8BenEFormMinimalRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'email': json['email'],
        'name': json['name'],
        'referenceNumber': !exists(json, 'referenceNumber') ? undefined : json['referenceNumber'],
        'companyId': !exists(json, 'companyId') ? undefined : json['companyId'],
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
    };
}

export function W8BenEFormMinimalRequestToJSON(value?: W8BenEFormMinimalRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'name': value.name,
        'referenceNumber': value.referenceNumber,
        'companyId': value.companyId,
        'referenceId': value.referenceId,
    };
}
