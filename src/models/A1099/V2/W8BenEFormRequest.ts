/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
import {
    SubstantialUsOwnerRequest,
    SubstantialUsOwnerRequestFromJSON,
    SubstantialUsOwnerRequestFromJSONTyped,
    SubstantialUsOwnerRequestToJSON,
} from './SubstantialUsOwnerRequest';

/**
 * 
 * @export
 * @interface W8BenEFormRequest
 */
export interface W8BenEFormRequest {
    /**
     * The form type (always "w8bene" for this model).
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    readonly type?: W8BenEFormRequestTypeEnum;
    /**
     * The name of the individual or entity associated with the form.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    name: string;
    /**
     * The country of citizenship.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    citizenshipCountry: string;
    /**
     * The name of the disregarded entity receiving the payment (if applicable).
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    disregardedEntity?: string | null;
    /**
     * The entity type.
     * Available values:
     * - 1: Corporation
     * - 2: Disregarded entity
     * - 3: Partnership
     * - 4: Simple trust
     * - 5: Grantor trust
     * - 6: Complex trust
     * - 7: Estate
     * - 8: Foreign Government - Controlled Entity
     * - 9: Central Bank of Issue
     * - 10: Tax-exempt organization
     * - 11: Private foundation
     * - 12: International organization
     * - 13: Foreign Government - Controlled Integral Part
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    entityType: string;
    /**
     * Indicates whether the entity is making a treaty claim.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    makingTreatyClaim?: boolean | null;
    /**
     * The FATCA status.
     * Available values:
     * - 1: Nonparticipating FFI (including a limited FFI or an FFI related to a Reporting IGA FFI other than a deemed-compliant FFI, participating FFI, or exempt beneficial owner)
     * - 2: Participating FFI
     * - 3: Reporting Model 1 FFI
     * - 4: Reporting Model 2 FFI
     * - 5: Registered deemed-compliant FFI (other than a reporting Model 1 FFI, sponsored FFI, or nonreporting IGA FFI covered in Part XII)
     * - 6: Sponsored FFI that has not obtained a GIIN
     * - 7: Certified deemed-compliant nonregistering local bank
     * - 8: Certified deemed-compliant FFI with only low-value accounts
     * - 9: Certified deemed-compliant sponsored, closely held investment vehicle
     * - 10: Certified deemed-compliant limited life debt investment entity
     * - 11: Certified deemed-compliant investment advisors and investment managers
     * - 12: Owner-documented FFI
     * - 13: Restricted distributor
     * - 14: Nonreporting IGA FFI
     * - 15: Foreign government, government of a U.S. possession, or foreign central bank of issue
     * - 16: International organization
     * - 17: Exempt retirement plans
     * - 18: Entity wholly owned by exempt beneficial owners
     * - 19: Territory financial institution
     * - 20: Nonfinancial group entity
     * - 21: Excepted nonfinancial start-up company
     * - 22: Excepted nonfinancial entity in liquidation or bankruptcy
     * - 23: 501(c) organization
     * - 24: Nonprofit organization
     * - 25: Publicly traded NFFE or NFFE affiliate of a publicly traded corporation
     * - 26: Excepted territory NFFE
     * - 27: Active NFFE
     * - 28: Passive NFFE
     * - 29: Excepted inter-affiliate FFI
     * - 30: Direct reporting NFFE
     * - 31: Sponsored direct reporting NFFE
     * - 32: Account that is not a financial account
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    fatcaStatus: string;
    /**
     * The residential address of the individual or entity.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    residenceAddress?: string;
    /**
     * The city of residence.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    residenceCity?: string;
    /**
     * The state of residence.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    residenceState?: string | null;
    /**
     * The ZIP code of the residence.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    residenceZip?: string;
    /**
     * The country of residence.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    residenceCountry: string;
    /**
     * Indicates whether the residence address is also the mailing address.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    residenceIsMailing?: boolean;
    /**
     * The mailing address.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    mailingAddress?: string | null;
    /**
     * The city of the mailing address.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    mailingCity?: string | null;
    /**
     * The state of the mailing address.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    mailingState?: string | null;
    /**
     * The ZIP code of the mailing address.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    mailingZip?: string | null;
    /**
     * The country of the mailing address.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    mailingCountry?: string | null;
    /**
     * The taxpayer identification number (TIN).
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    tin?: string | null;
    /**
     * The global intermediary identification number (GIIN).
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    giin?: string | null;
    /**
     * Indicates whether a foreign TIN is not required.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    foreignTinNotRequired?: boolean | null;
    /**
     * The foreign taxpayer identification number (TIN).
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    foreignTin?: string | null;
    /**
     * A reference number for the form.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    referenceNumber?: string | null;
    /**
     * The FATCA status of disregarded entity or branch receiving payment.
     * Available values:
     * - 1: Limited Branch
     * - 2: U.S. Branch
     * - 3: Participating FFI
     * - 4: Reporting Model 1 FFI
     * - 5: Reporting Model 2 FFI
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    disregardedEntityFatcaStatus?: string | null;
    /**
     * The address for disregarded entities.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    disregardedAddress?: string | null;
    /**
     * The city for disregarded entities.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    disregardedCity?: string | null;
    /**
     * The state for disregarded entities.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    disregardedState?: string | null;
    /**
     * The ZIP code for disregarded entities.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    disregardedZip?: string | null;
    /**
     * The country for disregarded entities.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    disregardedCountry?: string | null;
    /**
     * The GIIN for disregarded entities.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    disregardedEntityGiin?: string | null;
    /**
     * Certifies the beneficial owner's country under the U.S. tax treaty.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    treatyCountryCertification?: boolean | null;
    /**
     * The treaty country of the beneficial owner.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    treatyCountry?: string | null;
    /**
     * Certifies that the beneficial owner is eligible for treaty benefits and meets any limitation on benefits requirements.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    benefitLimitationCertification?: boolean | null;
    /**
     * The benefit limitation for tax treaty claims.
     * Available values:
     * - 1: Government
     * - 2: Tax exempt pension trust or pension fund
     * - 3: Other tax exempt organization
     * - 4: Publicly traded corporation
     * - 5: Subsidiary of a publicly traded corporation
     * - 6: Company that meets the ownership and base erosion test
     * - 7: Company that meets the derivative benefits test
     * - 8: Company with an item of income that meets active trade or business test
     * - 9: Favorable discretionary determination by the U.S. competent authority received
     * - 10: Other
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    benefitLimitation?: string | null;
    /**
     * Certifies that the beneficial owner claims treaty benefits and meets the qualified resident status for specific U.S. source income.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    qualifiedResidentStatusCertification?: boolean | null;
    /**
     * Indicates the specific article and paragraph of the tax treaty under which the beneficial owner is claiming benefits.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    treatyArticle?: string | null;
    /**
     * Specifies the reduced withholding rate claimed under the applicable tax treaty.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    withholdingRate?: string | null;
    /**
     * Specifies the type of income for which the reduced treaty withholding rate is being claimed.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    incomeType?: string | null;
    /**
     * The additional conditions in the article the beneficial owner meets to be eligible for the rate of withholding.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    treatyReasons?: string | null;
    /**
     * The name of the entity that sponsors the foreign financial institution (FFI).
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    ffiSponsoringEntity?: string | null;
    /**
     * Certifies that the entity is an investment entity, not a QI, WP, or WT, and has an agreement with a sponsoring entity.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    investmentEntityCertification?: boolean | null;
    /**
     * Certifies that the entity is a controlled foreign corporation sponsored by a U.S. financial institution, not a QI, WP, or WT,
     * and shares a common electronic account system for full transparency.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    controlledForeignCorporationCertification?: boolean | null;
    /**
     * Certifies that the FFI operates solely as a limited bank or credit union within its country, meets asset thresholds,
     * and has no foreign operations or affiliations outside its country of organization.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    compliantNonregisteringLocalBankCertification?: boolean | null;
    /**
     * Certifies that the FFI is not primarily engaged in investment activities, maintains only low-value accounts,
     * and has limited total assets within its group.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    compliantFfiLowValueAccountsCertification?: boolean | null;
    /**
     * The name of sponsoring entity for a certified deemed-compliant, closely held investment vehicle.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    sponsoredCloselyHeldEntitySponsoringEntity?: string | null;
    /**
     * Certifies that the entity is a sponsored investment entity with 20 or fewer individual owners,
     * and that all compliance obligations are fulfilled by the sponsoring entity.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    sponsoredCloselyHeldInvestmentVehicleCertification?: boolean | null;
    /**
     * Certifies that the entity qualifies as a limited life debt investment entity based on its formation date, issuance terms,
     * and compliance with regulatory requirements.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    compliantLimitedLifeDebtEntityCertification?: boolean | null;
    /**
     * Certifies that the entity is a financial institution solely because it is an investment entity under regulations
     * and the entity does not maintain financial accounts.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    investmentEntityNoFinancialAccountsCertification?: boolean | null;
    /**
     * Certifies that the FFI meets all requirements to qualify as an owner-documented FFI, including restrictions on activities,
     * ownership, and account relationships.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    ownerDocumentedFfiCertification?: boolean | null;
    /**
     * Certifies that the FFI will provide a complete owner reporting statement
     * and required documentation for each relevant owner or debt holder.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    ownerDocumentedFfiReportingStatementCertification?: boolean | null;
    /**
     * Certifies that the FFI will provide an auditor‚Äôs letter and required owner reporting documentation
     * to confirm its status as an owner-documented FFI.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    ownerDocumentedFfiAuditorLetterCertification?: boolean | null;
    /**
     * Certifies that the trust has no contingent or unidentified beneficiaries or designated classes of beneficiaries.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    ownerDocumentedFfiTrustBeneficiariesCertification?: boolean | null;
    /**
     * Certifies that the entity qualifies as a restricted distributor based on its operations, customer base, regulatory compliance,
     * and financial and geographic limitations.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    restrictedDistributorCertification?: boolean | null;
    /**
     * Certifies that the entity is, and has been, bound by distribution agreements prohibiting sales of fund interests to
     * specified U.S. persons and certain non-U.S. entities.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    restrictedDistributorAgreementCertification?: boolean | null;
    /**
     * Certifies that the entity complies with distribution restrictions for U.S.-linked investors
     * and has addressed any preexisting sales in accordance with FATCA regulations.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    restrictedDistributorPreexistingSalesComplianceCertification?: boolean | null;
    /**
     * Certifies that the entity meets the requirements to be considered a nonreporting financial institution to an applicable IGA.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    nonreportingIgaFfiCertification?: boolean | null;
    /**
     * The country for the applicable IGA with the United States.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    igaCountry?: string | null;
    /**
     * The applicable IGA model.
     * Available values:
     * - 1: Model 1 IGA
     * - 2: Model 2 IGA
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    igaModel?: string | null;
    /**
     * Specifies how the applicable IGA is treated under the IGA provisions or Treasury regulations.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    igaLegalStatusTreatment?: string | null;
    /**
     * The trustee or sponsor name for the nonreporting IGA FFI.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    igaFfiTrusteeOrSponsor?: string | null;
    /**
     * Indicates whether the trustee for the nonreporting IGA FFI is foreign.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    igaFfiTrusteeIsForeign?: boolean | null;
    /**
     * Certifies that the entity is the beneficial owner and is not engaged in commercial financial activities related
     * to the specified payments, accounts or obligations for which this form is submitted.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    nonCommercialFinancialActivityCertification?: boolean | null;
    /**
     * Certifies that the entity is an international organization described in section 7701(a)(18).
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    internationOrganizationCertification?: boolean | null;
    /**
     * Certifies that the entity is an intergovernmental or supranational organization primarily comprised of foreign governments,
     * is the beneficial owner, and is not engaged in commercial financial activities.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    intergovernmentalOrganizationCertification?: boolean | null;
    /**
     * Certifies that the entity is a pension or retirement fund established in a treaty country
     * and is entitled to treaty benefits on U.S. source income.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    treatyQualifiedPensionFundCertification?: boolean | null;
    /**
     * Certifies that the entity is a government-regulated retirement fund meeting specific requirements for contributions, tax exemption,
     * beneficiary limits, and distribution restrictions.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    qualifiedRetirementFundCertification?: boolean | null;
    /**
     * Certifies that the entity is a government-regulated retirement fund with fewer than 50 participants, limited foreign ownership,
     * and employer sponsorship that is not from investment entities or passive NFFEs.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    narrowParticipationRetirementFundCertification?: boolean | null;
    /**
     * Certifies that the entity is formed under a pension plan meeting section 401(a) requirements, except for being U.S.-trust funded.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    section401AEquivalentPensionPlanCertification?: boolean | null;
    /**
     * Certifies that the entity is established solely to earn income for the benefit of qualifying retirement funds
     * or accounts under applicable FATCA regulations or IGAs.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    investmentEntityForRetirementFundsCertification?: boolean | null;
    /**
     * Certifies that the entity is established and sponsored by a qualifying exempt beneficial owner to provide retirement, disability,
     * or death benefits to individuals based on services performed for the sponsor.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    exemptBeneficialOwnerSponsoredRetirementFundCertification?: boolean | null;
    /**
     * Certifies that the entity is an investment entity wholly owned by exempt beneficial owners and has provided complete ownership
     * and documentation details as required under FATCA regulations.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    exemptBeneficialOwnerOwnedInvestmentEntityCertification?: boolean | null;
    /**
     * Certifies that the entity is a financial institution (other than an investment entity) that is incorporated
     * or organized under the laws of a possession of the United States.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    territoryFinancialInstitutionCertification?: boolean | null;
    /**
     * Certifies that the entity is a holding company, treasury center, or captive finance company operating within a nonfinancial group
     * and not functioning as an investment or financial institution.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    exceptedNonfinancialGroupEntityCertification?: boolean | null;
    /**
     * Certifies that the entity is a recently formed startup NFFE investing in a non-financial business
     * and is not operating as or presenting itself as an investment fund.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    exceptedNonfinancialStartUpCertification?: boolean | null;
    /**
     * The date the start-up company was formed on (or, in case of new line of business, the date of board resolution approving the
     * new line of business).
     * @type {Date}
     * @memberof W8BenEFormRequest
     */
    startupFormationOrResolutionDate?: Date | null;
    /**
     * Certifies that the entity is in liquidation, reorganization, or bankruptcy and intends to operate as a nonfinancial entity,
     * with supporting documentation available if the process exceeds three years.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    exceptedNonfinancialEntityInLiquidationOrBankruptcyCertification?: boolean | null;
    /**
     * The filed date for a plan of reorganization, liquidation or bankruptcy.
     * @type {Date}
     * @memberof W8BenEFormRequest
     */
    nonfinancialEntityFilingDate?: Date | null;
    /**
     * Certifies that the entity is a section 501(c) organization based on a valid IRS determination letter
     * or a legal opinion from U.S. counsel.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    section501COrganizationCertification?: boolean | null;
    /**
     * The date of the IRS determination letter confirming the entity‚Äôs section 501(c) status.
     * @type {Date}
     * @memberof W8BenEFormRequest
     */
    determinationLetterDate?: Date | null;
    /**
     * Certifies that the entity is a nonprofit organization established for charitable or similar purposes, exempt from income tax,
     * and restricted in the use and distribution of its assets under applicable law.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    nonprofitOrganizationCertification?: boolean | null;
    /**
     * Certifies that the entity is a foreign corporation that is not a financial institution
     * and whose stock is regularly traded on an established securities market.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    publiclyTradedNffeCertification?: boolean | null;
    /**
     * The name of the securities market where the corporation's stock is regularly traded.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    publiclyTradedNffeSecuritiesMarket?: string | null;
    /**
     * Certifies that the entity is a foreign corporation that is not a financial institution
     * and is affiliated with a publicly traded entity within the same expanded affiliated group.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    nffeAffiliateOfPubliclyTradedEntityCertification?: boolean | null;
    /**
     * The name of the affiliated entity whose stock is regularly traded on an established securities market.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    publiclyTradedEntity?: string | null;
    /**
     * The name of the established securities market where the affiliated entity's stock is traded.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    nffeAffiliateOfPubliclyTradedEntitySecuritiesMarket?: string | null;
    /**
     * Certifies that the entity is organized in a U.S. possession, is not engaged in financial activities,
     * and is entirely owned by bona fide residents of that possession.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    exceptedTerritoryNffeCertification?: boolean | null;
    /**
     * Certifies that the entity is a foreign non-financial institution with less than 50% passive income
     * and less than 50% of its assets producing or held to produce passive income.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    activeNffeCertification?: boolean | null;
    /**
     * Certifies that the entity is a foreign non-financial entity that does not qualify for any other NFFE category
     * and is not a financial institution.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    passiveNffeCertification?: boolean | null;
    /**
     * Certifies that the passive NFFE has no substantial U.S. owners or controlling U.S. persons.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    passiveNffeNoSubstantialUsOwnersCertification?: boolean | null;
    /**
     * Certifies that the passive NFFE has provided the name, address, and TIN of each substantial U.S. owner or controlling U.S. person.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    passiveNffeSubstantialUsOwnersProvidedCertification?: boolean | null;
    /**
     * Certifies that the entity is an inter-affiliate FFI meeting all conditions for exemption,
     * including limited account activity and payment interactions within its expanded affiliated group.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    exceptedInterAffiliateFfiCertification?: boolean | null;
    /**
     * Certifies that the entity is a sponsored direct reporting NFFE.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    sponsoredDirectReportingNffeCertification?: boolean | null;
    /**
     * The name of the entity that sponsors the direct reporting NFFE.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    directReportingNffeSponsoringEntity?: string | null;
    /**
     * The list of substantial U.S. owners of passive NFFE.
     * @type {Array<SubstantialUsOwnerRequest>}
     * @memberof W8BenEFormRequest
     */
    substantialUsOwners?: Array<SubstantialUsOwnerRequest>;
    /**
     * The name of the signer.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    signerName?: string | null;
    /**
     * Certifies signer has the capacity to sign for the beneficial owner.
     * @type {boolean}
     * @memberof W8BenEFormRequest
     */
    capacityToSignCertification?: boolean | null;
    /**
     * The date when e-delivery was consented.
     * @type {Date}
     * @memberof W8BenEFormRequest
     */
    eDeliveryConsentedAt?: Date | null;
    /**
     * The signature of the form.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    signature?: string | null;
    /**
     * The ID of the associated company. Required when creating a form.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    companyId?: string;
    /**
     * A reference identifier for the form.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    referenceId?: string | null;
    /**
     * The email address of the individual associated with the form.
     * @type {string}
     * @memberof W8BenEFormRequest
     */
    email?: string | null;
}

/**
* @export
* @enum {string}
*/
export enum W8BenEFormRequestTypeEnum {
    W4 = 'W4',
    W8Ben = 'W8Ben',
    W8BenE = 'W8BenE',
    W8Imy = 'W8Imy',
    W9 = 'W9'
}

/**
 * Check if a given object implements the W8BenEFormRequest interface.
 */
export function instanceOfW8BenEFormRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "citizenshipCountry" in value;
    isInstance = isInstance && "entityType" in value;
    isInstance = isInstance && "fatcaStatus" in value;
    isInstance = isInstance && "residenceCountry" in value;

    return isInstance;
}

export function W8BenEFormRequestFromJSON(json: any): W8BenEFormRequest {
    return W8BenEFormRequestFromJSONTyped(json, false);
}

export function W8BenEFormRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): W8BenEFormRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'name': json['name'],
        'citizenshipCountry': json['citizenshipCountry'],
        'disregardedEntity': !exists(json, 'disregardedEntity') ? undefined : json['disregardedEntity'],
        'entityType': json['entityType'],
        'makingTreatyClaim': !exists(json, 'makingTreatyClaim') ? undefined : json['makingTreatyClaim'],
        'fatcaStatus': json['fatcaStatus'],
        'residenceAddress': !exists(json, 'residenceAddress') ? undefined : json['residenceAddress'],
        'residenceCity': !exists(json, 'residenceCity') ? undefined : json['residenceCity'],
        'residenceState': !exists(json, 'residenceState') ? undefined : json['residenceState'],
        'residenceZip': !exists(json, 'residenceZip') ? undefined : json['residenceZip'],
        'residenceCountry': json['residenceCountry'],
        'residenceIsMailing': !exists(json, 'residenceIsMailing') ? undefined : json['residenceIsMailing'],
        'mailingAddress': !exists(json, 'mailingAddress') ? undefined : json['mailingAddress'],
        'mailingCity': !exists(json, 'mailingCity') ? undefined : json['mailingCity'],
        'mailingState': !exists(json, 'mailingState') ? undefined : json['mailingState'],
        'mailingZip': !exists(json, 'mailingZip') ? undefined : json['mailingZip'],
        'mailingCountry': !exists(json, 'mailingCountry') ? undefined : json['mailingCountry'],
        'tin': !exists(json, 'tin') ? undefined : json['tin'],
        'giin': !exists(json, 'giin') ? undefined : json['giin'],
        'foreignTinNotRequired': !exists(json, 'foreignTinNotRequired') ? undefined : json['foreignTinNotRequired'],
        'foreignTin': !exists(json, 'foreignTin') ? undefined : json['foreignTin'],
        'referenceNumber': !exists(json, 'referenceNumber') ? undefined : json['referenceNumber'],
        'disregardedEntityFatcaStatus': !exists(json, 'disregardedEntityFatcaStatus') ? undefined : json['disregardedEntityFatcaStatus'],
        'disregardedAddress': !exists(json, 'disregardedAddress') ? undefined : json['disregardedAddress'],
        'disregardedCity': !exists(json, 'disregardedCity') ? undefined : json['disregardedCity'],
        'disregardedState': !exists(json, 'disregardedState') ? undefined : json['disregardedState'],
        'disregardedZip': !exists(json, 'disregardedZip') ? undefined : json['disregardedZip'],
        'disregardedCountry': !exists(json, 'disregardedCountry') ? undefined : json['disregardedCountry'],
        'disregardedEntityGiin': !exists(json, 'disregardedEntityGiin') ? undefined : json['disregardedEntityGiin'],
        'treatyCountryCertification': !exists(json, 'treatyCountryCertification') ? undefined : json['treatyCountryCertification'],
        'treatyCountry': !exists(json, 'treatyCountry') ? undefined : json['treatyCountry'],
        'benefitLimitationCertification': !exists(json, 'benefitLimitationCertification') ? undefined : json['benefitLimitationCertification'],
        'benefitLimitation': !exists(json, 'benefitLimitation') ? undefined : json['benefitLimitation'],
        'qualifiedResidentStatusCertification': !exists(json, 'qualifiedResidentStatusCertification') ? undefined : json['qualifiedResidentStatusCertification'],
        'treatyArticle': !exists(json, 'treatyArticle') ? undefined : json['treatyArticle'],
        'withholdingRate': !exists(json, 'withholdingRate') ? undefined : json['withholdingRate'],
        'incomeType': !exists(json, 'incomeType') ? undefined : json['incomeType'],
        'treatyReasons': !exists(json, 'treatyReasons') ? undefined : json['treatyReasons'],
        'ffiSponsoringEntity': !exists(json, 'ffiSponsoringEntity') ? undefined : json['ffiSponsoringEntity'],
        'investmentEntityCertification': !exists(json, 'investmentEntityCertification') ? undefined : json['investmentEntityCertification'],
        'controlledForeignCorporationCertification': !exists(json, 'controlledForeignCorporationCertification') ? undefined : json['controlledForeignCorporationCertification'],
        'compliantNonregisteringLocalBankCertification': !exists(json, 'compliantNonregisteringLocalBankCertification') ? undefined : json['compliantNonregisteringLocalBankCertification'],
        'compliantFfiLowValueAccountsCertification': !exists(json, 'compliantFfiLowValueAccountsCertification') ? undefined : json['compliantFfiLowValueAccountsCertification'],
        'sponsoredCloselyHeldEntitySponsoringEntity': !exists(json, 'sponsoredCloselyHeldEntitySponsoringEntity') ? undefined : json['sponsoredCloselyHeldEntitySponsoringEntity'],
        'sponsoredCloselyHeldInvestmentVehicleCertification': !exists(json, 'sponsoredCloselyHeldInvestmentVehicleCertification') ? undefined : json['sponsoredCloselyHeldInvestmentVehicleCertification'],
        'compliantLimitedLifeDebtEntityCertification': !exists(json, 'compliantLimitedLifeDebtEntityCertification') ? undefined : json['compliantLimitedLifeDebtEntityCertification'],
        'investmentEntityNoFinancialAccountsCertification': !exists(json, 'investmentEntityNoFinancialAccountsCertification') ? undefined : json['investmentEntityNoFinancialAccountsCertification'],
        'ownerDocumentedFfiCertification': !exists(json, 'ownerDocumentedFfiCertification') ? undefined : json['ownerDocumentedFfiCertification'],
        'ownerDocumentedFfiReportingStatementCertification': !exists(json, 'ownerDocumentedFfiReportingStatementCertification') ? undefined : json['ownerDocumentedFfiReportingStatementCertification'],
        'ownerDocumentedFfiAuditorLetterCertification': !exists(json, 'ownerDocumentedFfiAuditorLetterCertification') ? undefined : json['ownerDocumentedFfiAuditorLetterCertification'],
        'ownerDocumentedFfiTrustBeneficiariesCertification': !exists(json, 'ownerDocumentedFfiTrustBeneficiariesCertification') ? undefined : json['ownerDocumentedFfiTrustBeneficiariesCertification'],
        'restrictedDistributorCertification': !exists(json, 'restrictedDistributorCertification') ? undefined : json['restrictedDistributorCertification'],
        'restrictedDistributorAgreementCertification': !exists(json, 'restrictedDistributorAgreementCertification') ? undefined : json['restrictedDistributorAgreementCertification'],
        'restrictedDistributorPreexistingSalesComplianceCertification': !exists(json, 'restrictedDistributorPreexistingSalesComplianceCertification') ? undefined : json['restrictedDistributorPreexistingSalesComplianceCertification'],
        'nonreportingIgaFfiCertification': !exists(json, 'nonreportingIgaFfiCertification') ? undefined : json['nonreportingIgaFfiCertification'],
        'igaCountry': !exists(json, 'igaCountry') ? undefined : json['igaCountry'],
        'igaModel': !exists(json, 'igaModel') ? undefined : json['igaModel'],
        'igaLegalStatusTreatment': !exists(json, 'igaLegalStatusTreatment') ? undefined : json['igaLegalStatusTreatment'],
        'igaFfiTrusteeOrSponsor': !exists(json, 'igaFfiTrusteeOrSponsor') ? undefined : json['igaFfiTrusteeOrSponsor'],
        'igaFfiTrusteeIsForeign': !exists(json, 'igaFfiTrusteeIsForeign') ? undefined : json['igaFfiTrusteeIsForeign'],
        'nonCommercialFinancialActivityCertification': !exists(json, 'nonCommercialFinancialActivityCertification') ? undefined : json['nonCommercialFinancialActivityCertification'],
        'internationOrganizationCertification': !exists(json, 'internationOrganizationCertification') ? undefined : json['internationOrganizationCertification'],
        'intergovernmentalOrganizationCertification': !exists(json, 'intergovernmentalOrganizationCertification') ? undefined : json['intergovernmentalOrganizationCertification'],
        'treatyQualifiedPensionFundCertification': !exists(json, 'treatyQualifiedPensionFundCertification') ? undefined : json['treatyQualifiedPensionFundCertification'],
        'qualifiedRetirementFundCertification': !exists(json, 'qualifiedRetirementFundCertification') ? undefined : json['qualifiedRetirementFundCertification'],
        'narrowParticipationRetirementFundCertification': !exists(json, 'narrowParticipationRetirementFundCertification') ? undefined : json['narrowParticipationRetirementFundCertification'],
        'section401AEquivalentPensionPlanCertification': !exists(json, 'section401AEquivalentPensionPlanCertification') ? undefined : json['section401AEquivalentPensionPlanCertification'],
        'investmentEntityForRetirementFundsCertification': !exists(json, 'investmentEntityForRetirementFundsCertification') ? undefined : json['investmentEntityForRetirementFundsCertification'],
        'exemptBeneficialOwnerSponsoredRetirementFundCertification': !exists(json, 'exemptBeneficialOwnerSponsoredRetirementFundCertification') ? undefined : json['exemptBeneficialOwnerSponsoredRetirementFundCertification'],
        'exemptBeneficialOwnerOwnedInvestmentEntityCertification': !exists(json, 'exemptBeneficialOwnerOwnedInvestmentEntityCertification') ? undefined : json['exemptBeneficialOwnerOwnedInvestmentEntityCertification'],
        'territoryFinancialInstitutionCertification': !exists(json, 'territoryFinancialInstitutionCertification') ? undefined : json['territoryFinancialInstitutionCertification'],
        'exceptedNonfinancialGroupEntityCertification': !exists(json, 'exceptedNonfinancialGroupEntityCertification') ? undefined : json['exceptedNonfinancialGroupEntityCertification'],
        'exceptedNonfinancialStartUpCertification': !exists(json, 'exceptedNonfinancialStartUpCertification') ? undefined : json['exceptedNonfinancialStartUpCertification'],
        'startupFormationOrResolutionDate': !exists(json, 'startupFormationOrResolutionDate') ? undefined : (json['startupFormationOrResolutionDate'] === null ? null : new Date(json['startupFormationOrResolutionDate'])),
        'exceptedNonfinancialEntityInLiquidationOrBankruptcyCertification': !exists(json, 'exceptedNonfinancialEntityInLiquidationOrBankruptcyCertification') ? undefined : json['exceptedNonfinancialEntityInLiquidationOrBankruptcyCertification'],
        'nonfinancialEntityFilingDate': !exists(json, 'nonfinancialEntityFilingDate') ? undefined : (json['nonfinancialEntityFilingDate'] === null ? null : new Date(json['nonfinancialEntityFilingDate'])),
        'section501COrganizationCertification': !exists(json, 'section501COrganizationCertification') ? undefined : json['section501COrganizationCertification'],
        'determinationLetterDate': !exists(json, 'determinationLetterDate') ? undefined : (json['determinationLetterDate'] === null ? null : new Date(json['determinationLetterDate'])),
        'nonprofitOrganizationCertification': !exists(json, 'nonprofitOrganizationCertification') ? undefined : json['nonprofitOrganizationCertification'],
        'publiclyTradedNffeCertification': !exists(json, 'publiclyTradedNffeCertification') ? undefined : json['publiclyTradedNffeCertification'],
        'publiclyTradedNffeSecuritiesMarket': !exists(json, 'publiclyTradedNffeSecuritiesMarket') ? undefined : json['publiclyTradedNffeSecuritiesMarket'],
        'nffeAffiliateOfPubliclyTradedEntityCertification': !exists(json, 'nffeAffiliateOfPubliclyTradedEntityCertification') ? undefined : json['nffeAffiliateOfPubliclyTradedEntityCertification'],
        'publiclyTradedEntity': !exists(json, 'publiclyTradedEntity') ? undefined : json['publiclyTradedEntity'],
        'nffeAffiliateOfPubliclyTradedEntitySecuritiesMarket': !exists(json, 'nffeAffiliateOfPubliclyTradedEntitySecuritiesMarket') ? undefined : json['nffeAffiliateOfPubliclyTradedEntitySecuritiesMarket'],
        'exceptedTerritoryNffeCertification': !exists(json, 'exceptedTerritoryNffeCertification') ? undefined : json['exceptedTerritoryNffeCertification'],
        'activeNffeCertification': !exists(json, 'activeNffeCertification') ? undefined : json['activeNffeCertification'],
        'passiveNffeCertification': !exists(json, 'passiveNffeCertification') ? undefined : json['passiveNffeCertification'],
        'passiveNffeNoSubstantialUsOwnersCertification': !exists(json, 'passiveNffeNoSubstantialUsOwnersCertification') ? undefined : json['passiveNffeNoSubstantialUsOwnersCertification'],
        'passiveNffeSubstantialUsOwnersProvidedCertification': !exists(json, 'passiveNffeSubstantialUsOwnersProvidedCertification') ? undefined : json['passiveNffeSubstantialUsOwnersProvidedCertification'],
        'exceptedInterAffiliateFfiCertification': !exists(json, 'exceptedInterAffiliateFfiCertification') ? undefined : json['exceptedInterAffiliateFfiCertification'],
        'sponsoredDirectReportingNffeCertification': !exists(json, 'sponsoredDirectReportingNffeCertification') ? undefined : json['sponsoredDirectReportingNffeCertification'],
        'directReportingNffeSponsoringEntity': !exists(json, 'directReportingNffeSponsoringEntity') ? undefined : json['directReportingNffeSponsoringEntity'],
        'substantialUsOwners': !exists(json, 'substantialUsOwners') ? undefined : ((json['substantialUsOwners'] as Array<any>)?.map(SubstantialUsOwnerRequestFromJSON)),
        'signerName': !exists(json, 'signerName') ? undefined : json['signerName'],
        'capacityToSignCertification': !exists(json, 'capacityToSignCertification') ? undefined : json['capacityToSignCertification'],
        'eDeliveryConsentedAt': !exists(json, 'eDeliveryConsentedAt') ? undefined : (json['eDeliveryConsentedAt'] === null ? null : new Date(json['eDeliveryConsentedAt'])),
        'signature': !exists(json, 'signature') ? undefined : json['signature'],
        'companyId': !exists(json, 'companyId') ? undefined : json['companyId'],
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
        'email': !exists(json, 'email') ? undefined : json['email'],
    };
}

export function W8BenEFormRequestToJSON(value?: W8BenEFormRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'citizenshipCountry': value.citizenshipCountry,
        'disregardedEntity': value.disregardedEntity,
        'entityType': value.entityType,
        'makingTreatyClaim': value.makingTreatyClaim,
        'fatcaStatus': value.fatcaStatus,
        'residenceAddress': value.residenceAddress,
        'residenceCity': value.residenceCity,
        'residenceState': value.residenceState,
        'residenceZip': value.residenceZip,
        'residenceCountry': value.residenceCountry,
        'residenceIsMailing': value.residenceIsMailing,
        'mailingAddress': value.mailingAddress,
        'mailingCity': value.mailingCity,
        'mailingState': value.mailingState,
        'mailingZip': value.mailingZip,
        'mailingCountry': value.mailingCountry,
        'tin': value.tin,
        'giin': value.giin,
        'foreignTinNotRequired': value.foreignTinNotRequired,
        'foreignTin': value.foreignTin,
        'referenceNumber': value.referenceNumber,
        'disregardedEntityFatcaStatus': value.disregardedEntityFatcaStatus,
        'disregardedAddress': value.disregardedAddress,
        'disregardedCity': value.disregardedCity,
        'disregardedState': value.disregardedState,
        'disregardedZip': value.disregardedZip,
        'disregardedCountry': value.disregardedCountry,
        'disregardedEntityGiin': value.disregardedEntityGiin,
        'treatyCountryCertification': value.treatyCountryCertification,
        'treatyCountry': value.treatyCountry,
        'benefitLimitationCertification': value.benefitLimitationCertification,
        'benefitLimitation': value.benefitLimitation,
        'qualifiedResidentStatusCertification': value.qualifiedResidentStatusCertification,
        'treatyArticle': value.treatyArticle,
        'withholdingRate': value.withholdingRate,
        'incomeType': value.incomeType,
        'treatyReasons': value.treatyReasons,
        'ffiSponsoringEntity': value.ffiSponsoringEntity,
        'investmentEntityCertification': value.investmentEntityCertification,
        'controlledForeignCorporationCertification': value.controlledForeignCorporationCertification,
        'compliantNonregisteringLocalBankCertification': value.compliantNonregisteringLocalBankCertification,
        'compliantFfiLowValueAccountsCertification': value.compliantFfiLowValueAccountsCertification,
        'sponsoredCloselyHeldEntitySponsoringEntity': value.sponsoredCloselyHeldEntitySponsoringEntity,
        'sponsoredCloselyHeldInvestmentVehicleCertification': value.sponsoredCloselyHeldInvestmentVehicleCertification,
        'compliantLimitedLifeDebtEntityCertification': value.compliantLimitedLifeDebtEntityCertification,
        'investmentEntityNoFinancialAccountsCertification': value.investmentEntityNoFinancialAccountsCertification,
        'ownerDocumentedFfiCertification': value.ownerDocumentedFfiCertification,
        'ownerDocumentedFfiReportingStatementCertification': value.ownerDocumentedFfiReportingStatementCertification,
        'ownerDocumentedFfiAuditorLetterCertification': value.ownerDocumentedFfiAuditorLetterCertification,
        'ownerDocumentedFfiTrustBeneficiariesCertification': value.ownerDocumentedFfiTrustBeneficiariesCertification,
        'restrictedDistributorCertification': value.restrictedDistributorCertification,
        'restrictedDistributorAgreementCertification': value.restrictedDistributorAgreementCertification,
        'restrictedDistributorPreexistingSalesComplianceCertification': value.restrictedDistributorPreexistingSalesComplianceCertification,
        'nonreportingIgaFfiCertification': value.nonreportingIgaFfiCertification,
        'igaCountry': value.igaCountry,
        'igaModel': value.igaModel,
        'igaLegalStatusTreatment': value.igaLegalStatusTreatment,
        'igaFfiTrusteeOrSponsor': value.igaFfiTrusteeOrSponsor,
        'igaFfiTrusteeIsForeign': value.igaFfiTrusteeIsForeign,
        'nonCommercialFinancialActivityCertification': value.nonCommercialFinancialActivityCertification,
        'internationOrganizationCertification': value.internationOrganizationCertification,
        'intergovernmentalOrganizationCertification': value.intergovernmentalOrganizationCertification,
        'treatyQualifiedPensionFundCertification': value.treatyQualifiedPensionFundCertification,
        'qualifiedRetirementFundCertification': value.qualifiedRetirementFundCertification,
        'narrowParticipationRetirementFundCertification': value.narrowParticipationRetirementFundCertification,
        'section401AEquivalentPensionPlanCertification': value.section401AEquivalentPensionPlanCertification,
        'investmentEntityForRetirementFundsCertification': value.investmentEntityForRetirementFundsCertification,
        'exemptBeneficialOwnerSponsoredRetirementFundCertification': value.exemptBeneficialOwnerSponsoredRetirementFundCertification,
        'exemptBeneficialOwnerOwnedInvestmentEntityCertification': value.exemptBeneficialOwnerOwnedInvestmentEntityCertification,
        'territoryFinancialInstitutionCertification': value.territoryFinancialInstitutionCertification,
        'exceptedNonfinancialGroupEntityCertification': value.exceptedNonfinancialGroupEntityCertification,
        'exceptedNonfinancialStartUpCertification': value.exceptedNonfinancialStartUpCertification,
        'startupFormationOrResolutionDate': value.startupFormationOrResolutionDate === undefined ? undefined : (value.startupFormationOrResolutionDate === null ? null : value.startupFormationOrResolutionDate.toISOString().substr(0,10)),
        'exceptedNonfinancialEntityInLiquidationOrBankruptcyCertification': value.exceptedNonfinancialEntityInLiquidationOrBankruptcyCertification,
        'nonfinancialEntityFilingDate': value.nonfinancialEntityFilingDate === undefined ? undefined : (value.nonfinancialEntityFilingDate === null ? null : value.nonfinancialEntityFilingDate.toISOString().substr(0,10)),
        'section501COrganizationCertification': value.section501COrganizationCertification,
        'determinationLetterDate': value.determinationLetterDate === undefined ? undefined : (value.determinationLetterDate === null ? null : value.determinationLetterDate.toISOString().substr(0,10)),
        'nonprofitOrganizationCertification': value.nonprofitOrganizationCertification,
        'publiclyTradedNffeCertification': value.publiclyTradedNffeCertification,
        'publiclyTradedNffeSecuritiesMarket': value.publiclyTradedNffeSecuritiesMarket,
        'nffeAffiliateOfPubliclyTradedEntityCertification': value.nffeAffiliateOfPubliclyTradedEntityCertification,
        'publiclyTradedEntity': value.publiclyTradedEntity,
        'nffeAffiliateOfPubliclyTradedEntitySecuritiesMarket': value.nffeAffiliateOfPubliclyTradedEntitySecuritiesMarket,
        'exceptedTerritoryNffeCertification': value.exceptedTerritoryNffeCertification,
        'activeNffeCertification': value.activeNffeCertification,
        'passiveNffeCertification': value.passiveNffeCertification,
        'passiveNffeNoSubstantialUsOwnersCertification': value.passiveNffeNoSubstantialUsOwnersCertification,
        'passiveNffeSubstantialUsOwnersProvidedCertification': value.passiveNffeSubstantialUsOwnersProvidedCertification,
        'exceptedInterAffiliateFfiCertification': value.exceptedInterAffiliateFfiCertification,
        'sponsoredDirectReportingNffeCertification': value.sponsoredDirectReportingNffeCertification,
        'directReportingNffeSponsoringEntity': value.directReportingNffeSponsoringEntity,
        'substantialUsOwners': value.substantialUsOwners === undefined ? undefined : ((value.substantialUsOwners as Array<any>)?.map(SubstantialUsOwnerRequestToJSON)),
        'signerName': value.signerName,
        'capacityToSignCertification': value.capacityToSignCertification,
        'eDeliveryConsentedAt': value.eDeliveryConsentedAt === undefined ? undefined : (value.eDeliveryConsentedAt === null ? null : value.eDeliveryConsentedAt.toISOString()),
        'signature': value.signature,
        'companyId': value.companyId,
        'referenceId': value.referenceId,
        'email': value.email,
    };
}
