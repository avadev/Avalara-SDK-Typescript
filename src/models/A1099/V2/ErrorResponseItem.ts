/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
/**
 * 
 * @export
 * @interface ErrorResponseItem
 */
export interface ErrorResponseItem {
    /**
     * An identifier for this occurrence of the problem.
     * It is the name of a request's field when specific to that field.
     * Otherwise, for other types of errors, its value is empty.
     * @type {string}
     * @memberof ErrorResponseItem
     */
    type?: string | null;
    /**
     * An explanation specific to this occurrence of the problem.
     * @type {string}
     * @memberof ErrorResponseItem
     */
    detail?: string | null;
}



/**
 * Check if a given object implements the ErrorResponseItem interface.
 */
export function instanceOfErrorResponseItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ErrorResponseItemFromJSON(json: any): ErrorResponseItem {
    return ErrorResponseItemFromJSONTyped(json, false);
}

export function ErrorResponseItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponseItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'detail': !exists(json, 'detail') ? undefined : json['detail'],
    };
}

export function ErrorResponseItemToJSON(value?: ErrorResponseItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'detail': value.detail,
    };
}
