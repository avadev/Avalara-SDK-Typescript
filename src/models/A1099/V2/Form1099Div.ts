/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
import {
    Form1099StatusDetail,
    Form1099StatusDetailFromJSON,
    Form1099StatusDetailFromJSONTyped,
    Form1099StatusDetailToJSON,
} from './Form1099StatusDetail';
import {
    StateAndLocalWithholding,
    StateAndLocalWithholdingFromJSON,
    StateAndLocalWithholdingFromJSONTyped,
    StateAndLocalWithholdingToJSON,
} from './StateAndLocalWithholding';
import {
    StateEfileStatusDetail,
    StateEfileStatusDetailFromJSON,
    StateEfileStatusDetailFromJSONTyped,
    StateEfileStatusDetailToJSON,
} from './StateEfileStatusDetail';
import {
    ValidationError,
    ValidationErrorFromJSON,
    ValidationErrorFromJSONTyped,
    ValidationErrorToJSON,
} from './ValidationError';

/**
 * Form 1099-DIV: Dividends and Distributions
 * @export
 * @interface Form1099Div
 */
export interface Form1099Div {
    /**
     * Total ordinary dividends
     * @type {number}
     * @memberof Form1099Div
     */
    totalOrdinaryDividends?: number | null;
    /**
     * Qualified dividends
     * @type {number}
     * @memberof Form1099Div
     */
    qualifiedDividends?: number | null;
    /**
     * Total capital gain distributions
     * @type {number}
     * @memberof Form1099Div
     */
    totalCapitalGainDistributions?: number | null;
    /**
     * Unrecaptured Section 1250 gain
     * @type {number}
     * @memberof Form1099Div
     */
    unrecapturedSection1250Gain?: number | null;
    /**
     * Section 1202 gain
     * @type {number}
     * @memberof Form1099Div
     */
    section1202Gain?: number | null;
    /**
     * Collectibles (28%) gain
     * @type {number}
     * @memberof Form1099Div
     */
    collectiblesGain?: number | null;
    /**
     * Section 897 ordinary dividends
     * @type {number}
     * @memberof Form1099Div
     */
    section897OrdinaryDividends?: number | null;
    /**
     * Section 897 capital gain
     * @type {number}
     * @memberof Form1099Div
     */
    section897CapitalGain?: number | null;
    /**
     * Nondividend distributions
     * @type {number}
     * @memberof Form1099Div
     */
    nondividendDistributions?: number | null;
    /**
     * Federal income tax withheld
     * @type {number}
     * @memberof Form1099Div
     */
    federalIncomeTaxWithheld?: number | null;
    /**
     * Section 199A dividends
     * @type {number}
     * @memberof Form1099Div
     */
    section199ADividends?: number | null;
    /**
     * Investment expenses
     * @type {number}
     * @memberof Form1099Div
     */
    investmentExpenses?: number | null;
    /**
     * Foreign tax paid
     * @type {number}
     * @memberof Form1099Div
     */
    foreignTaxPaid?: number | null;
    /**
     * Foreign country or U.S. possession
     * @type {string}
     * @memberof Form1099Div
     */
    foreignCountryOrUSPossession?: string | null;
    /**
     * Cash liquidation distributions
     * @type {number}
     * @memberof Form1099Div
     */
    cashLiquidationDistributions?: number | null;
    /**
     * Noncash liquidation distributions
     * @type {number}
     * @memberof Form1099Div
     */
    noncashLiquidationDistributions?: number | null;
    /**
     * Exempt-interest dividends
     * @type {number}
     * @memberof Form1099Div
     */
    exemptInterestDividends?: number | null;
    /**
     * Specified private activity bond interest dividends
     * @type {number}
     * @memberof Form1099Div
     */
    specifiedPrivateActivityBondInterestDividends?: number | null;
    /**
     * FATCA filing requirement
     * @type {boolean}
     * @memberof Form1099Div
     */
    fatcaFilingRequirement?: boolean | null;
    /**
     * Form type
     * @type {string}
     * @memberof Form1099Div
     */
    type: Form1099DivTypeEnum;
    /**
     * Form ID. Unique identifier set when the record is created.
     * @type {string}
     * @memberof Form1099Div
     */
    readonly id?: string | null;
    /**
     * Issuer ID - only required when creating forms
     * @type {string}
     * @memberof Form1099Div
     */
    issuerId?: string | null;
    /**
     * Issuer Reference ID - only required when creating forms
     * @type {string}
     * @memberof Form1099Div
     */
    issuerReferenceId?: string | null;
    /**
     * Issuer TIN - readonly
     * @type {string}
     * @memberof Form1099Div
     */
    issuerTin?: string | null;
    /**
     * Tax Year - only required when creating forms
     * @type {number}
     * @memberof Form1099Div
     */
    taxYear?: number | null;
    /**
     * Internal reference ID. Never shown to any agency or recipient.
     * @type {string}
     * @memberof Form1099Div
     */
    referenceId?: string | null;
    /**
     * Recipient's Federal Tax Identification Number (TIN).
     * @type {string}
     * @memberof Form1099Div
     */
    tin?: string | null;
    /**
     * Recipient name
     * @type {string}
     * @memberof Form1099Div
     */
    recipientName: string | null;
    /**
     * Type of TIN (Tax ID Number)
     * @type {string}
     * @memberof Form1099Div
     */
    tinType?: Form1099DivTinTypeEnum;
    /**
     * Recipient second name
     * @type {string}
     * @memberof Form1099Div
     */
    recipientSecondName?: string | null;
    /**
     * Address.
     * @type {string}
     * @memberof Form1099Div
     */
    address: string | null;
    /**
     * Address line 2.
     * @type {string}
     * @memberof Form1099Div
     */
    address2?: string | null;
    /**
     * City.
     * @type {string}
     * @memberof Form1099Div
     */
    city: string | null;
    /**
     * Two-letter US state or Canadian province code (required for US/CA addresses).
     * @type {string}
     * @memberof Form1099Div
     */
    state?: string | null;
    /**
     * ZIP/postal code.
     * @type {string}
     * @memberof Form1099Div
     */
    zip?: string | null;
    /**
     * Recipient's Contact email address.
     * @type {string}
     * @memberof Form1099Div
     */
    email?: string | null;
    /**
     * Account number
     * @type {string}
     * @memberof Form1099Div
     */
    accountNumber?: string | null;
    /**
     * Office code
     * @type {string}
     * @memberof Form1099Div
     */
    officeCode?: string | null;
    /**
     * Province or region for non-US/CA addresses.
     * @type {string}
     * @memberof Form1099Div
     */
    nonUsProvince?: string | null;
    /**
     * Two-letter IRS country code (e.g., 'US', 'CA'), as defined at https://www.irs.gov/e-file-providers/country-codes.
     * @type {string}
     * @memberof Form1099Div
     */
    countryCode: string | null;
    /**
     * Date when federal e-filing should be scheduled for this form
     * @type {Date}
     * @memberof Form1099Div
     */
    federalEfileDate?: Date | null;
    /**
     * Boolean indicating that postal mailing to the recipient should be scheduled for this form
     * @type {boolean}
     * @memberof Form1099Div
     */
    postalMail?: boolean | null;
    /**
     * Date when state e-filing should be scheduled for this form
     * @type {Date}
     * @memberof Form1099Div
     */
    stateEfileDate?: Date | null;
    /**
     * Date when recipient e-delivery should be scheduled for this form
     * @type {Date}
     * @memberof Form1099Div
     */
    recipientEdeliveryDate?: Date | null;
    /**
     * Boolean indicating that TIN Matching should be scheduled for this form
     * @type {boolean}
     * @memberof Form1099Div
     */
    tinMatch?: boolean | null;
    /**
     * No TIN indicator
     * @type {boolean}
     * @memberof Form1099Div
     */
    noTin?: boolean | null;
    /**
     * Boolean indicating that address verification should be scheduled for this form
     * @type {boolean}
     * @memberof Form1099Div
     */
    addressVerification?: boolean | null;
    /**
     * State and local withholding information
     * @type {StateAndLocalWithholding}
     * @memberof Form1099Div
     */
    stateAndLocalWithholding?: StateAndLocalWithholding | null;
    /**
     * Second TIN notice
     * @type {boolean}
     * @memberof Form1099Div
     */
    secondTinNotice?: boolean;
    /**
     * Federal e-file status
     * @type {Form1099StatusDetail}
     * @memberof Form1099Div
     */
    readonly federalEfileStatus?: Form1099StatusDetail | null;
    /**
     * State e-file status
     * @type {Array<StateEfileStatusDetail>}
     * @memberof Form1099Div
     */
    readonly stateEfileStatus?: Array<StateEfileStatusDetail> | null;
    /**
     * Postal mail to recipient status
     * @type {Form1099StatusDetail}
     * @memberof Form1099Div
     */
    readonly postalMailStatus?: Form1099StatusDetail | null;
    /**
     * TIN Match status
     * @type {Form1099StatusDetail}
     * @memberof Form1099Div
     */
    readonly tinMatchStatus?: Form1099StatusDetail | null;
    /**
     * Address verification status
     * @type {Form1099StatusDetail}
     * @memberof Form1099Div
     */
    readonly addressVerificationStatus?: Form1099StatusDetail | null;
    /**
     * EDelivery status
     * @type {Form1099StatusDetail}
     * @memberof Form1099Div
     */
    readonly eDeliveryStatus?: Form1099StatusDetail | null;
    /**
     * Validation errors
     * @type {Array<ValidationError>}
     * @memberof Form1099Div
     */
    readonly validationErrors?: Array<ValidationError> | null;
    /**
     * Date time when the record was created.
     * @type {Date}
     * @memberof Form1099Div
     */
    readonly createdAt?: Date;
    /**
     * Date time when the record was last updated.
     * @type {Date}
     * @memberof Form1099Div
     */
    readonly updatedAt?: Date;
}

/**
* @export
* @enum {string}
*/
export enum Form1099DivTypeEnum {
    _1099Nec = '1099-NEC',
    _1099Misc = '1099-MISC',
    _1099Div = '1099-DIV',
    _1099R = '1099-R',
    _1099K = '1099-K',
    _1095B = '1095-B',
    _1042S = '1042-S',
    _1095C = '1095-C',
    _1099Int = '1099-INT'
}/**
* @export
* @enum {string}
*/
export enum Form1099DivTinTypeEnum {
    Empty = 'Empty',
    Ein = 'EIN',
    Ssn = 'SSN',
    Itin = 'ITIN',
    Atin = 'ATIN'
}

/**
 * Check if a given object implements the Form1099Div interface.
 */
export function instanceOfForm1099Div(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "recipientName" in value;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "city" in value;
    isInstance = isInstance && "countryCode" in value;

    return isInstance;
}

export function Form1099DivFromJSON(json: any): Form1099Div {
    return Form1099DivFromJSONTyped(json, false);
}

export function Form1099DivFromJSONTyped(json: any, ignoreDiscriminator: boolean): Form1099Div {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalOrdinaryDividends': !exists(json, 'totalOrdinaryDividends') ? undefined : json['totalOrdinaryDividends'],
        'qualifiedDividends': !exists(json, 'qualifiedDividends') ? undefined : json['qualifiedDividends'],
        'totalCapitalGainDistributions': !exists(json, 'totalCapitalGainDistributions') ? undefined : json['totalCapitalGainDistributions'],
        'unrecapturedSection1250Gain': !exists(json, 'unrecapturedSection1250Gain') ? undefined : json['unrecapturedSection1250Gain'],
        'section1202Gain': !exists(json, 'section1202Gain') ? undefined : json['section1202Gain'],
        'collectiblesGain': !exists(json, 'collectiblesGain') ? undefined : json['collectiblesGain'],
        'section897OrdinaryDividends': !exists(json, 'section897OrdinaryDividends') ? undefined : json['section897OrdinaryDividends'],
        'section897CapitalGain': !exists(json, 'section897CapitalGain') ? undefined : json['section897CapitalGain'],
        'nondividendDistributions': !exists(json, 'nondividendDistributions') ? undefined : json['nondividendDistributions'],
        'federalIncomeTaxWithheld': !exists(json, 'federalIncomeTaxWithheld') ? undefined : json['federalIncomeTaxWithheld'],
        'section199ADividends': !exists(json, 'section199ADividends') ? undefined : json['section199ADividends'],
        'investmentExpenses': !exists(json, 'investmentExpenses') ? undefined : json['investmentExpenses'],
        'foreignTaxPaid': !exists(json, 'foreignTaxPaid') ? undefined : json['foreignTaxPaid'],
        'foreignCountryOrUSPossession': !exists(json, 'foreignCountryOrUSPossession') ? undefined : json['foreignCountryOrUSPossession'],
        'cashLiquidationDistributions': !exists(json, 'cashLiquidationDistributions') ? undefined : json['cashLiquidationDistributions'],
        'noncashLiquidationDistributions': !exists(json, 'noncashLiquidationDistributions') ? undefined : json['noncashLiquidationDistributions'],
        'exemptInterestDividends': !exists(json, 'exemptInterestDividends') ? undefined : json['exemptInterestDividends'],
        'specifiedPrivateActivityBondInterestDividends': !exists(json, 'specifiedPrivateActivityBondInterestDividends') ? undefined : json['specifiedPrivateActivityBondInterestDividends'],
        'fatcaFilingRequirement': !exists(json, 'fatcaFilingRequirement') ? undefined : json['fatcaFilingRequirement'],
        'type': json['type'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'issuerId': !exists(json, 'issuerId') ? undefined : json['issuerId'],
        'issuerReferenceId': !exists(json, 'issuerReferenceId') ? undefined : json['issuerReferenceId'],
        'issuerTin': !exists(json, 'issuerTin') ? undefined : json['issuerTin'],
        'taxYear': !exists(json, 'taxYear') ? undefined : json['taxYear'],
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
        'tin': !exists(json, 'tin') ? undefined : json['tin'],
        'recipientName': json['recipientName'],
        'tinType': !exists(json, 'tinType') ? undefined : json['tinType'],
        'recipientSecondName': !exists(json, 'recipientSecondName') ? undefined : json['recipientSecondName'],
        'address': json['address'],
        'address2': !exists(json, 'address2') ? undefined : json['address2'],
        'city': json['city'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'zip': !exists(json, 'zip') ? undefined : json['zip'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'accountNumber': !exists(json, 'accountNumber') ? undefined : json['accountNumber'],
        'officeCode': !exists(json, 'officeCode') ? undefined : json['officeCode'],
        'nonUsProvince': !exists(json, 'nonUsProvince') ? undefined : json['nonUsProvince'],
        'countryCode': json['countryCode'],
        'federalEfileDate': !exists(json, 'federalEfileDate') ? undefined : (json['federalEfileDate'] === null ? null : new Date(json['federalEfileDate'])),
        'postalMail': !exists(json, 'postalMail') ? undefined : json['postalMail'],
        'stateEfileDate': !exists(json, 'stateEfileDate') ? undefined : (json['stateEfileDate'] === null ? null : new Date(json['stateEfileDate'])),
        'recipientEdeliveryDate': !exists(json, 'recipientEdeliveryDate') ? undefined : (json['recipientEdeliveryDate'] === null ? null : new Date(json['recipientEdeliveryDate'])),
        'tinMatch': !exists(json, 'tinMatch') ? undefined : json['tinMatch'],
        'noTin': !exists(json, 'noTin') ? undefined : json['noTin'],
        'addressVerification': !exists(json, 'addressVerification') ? undefined : json['addressVerification'],
        'stateAndLocalWithholding': !exists(json, 'stateAndLocalWithholding') ? undefined : StateAndLocalWithholdingFromJSON(json['stateAndLocalWithholding']),
        'secondTinNotice': !exists(json, 'secondTinNotice') ? undefined : json['secondTinNotice'],
        'federalEfileStatus': !exists(json, 'federalEfileStatus') ? undefined : Form1099StatusDetailFromJSON(json['federalEfileStatus']),
        'stateEfileStatus': !exists(json, 'stateEfileStatus') ? undefined : (json['stateEfileStatus'] === null ? null : (json['stateEfileStatus'] as Array<any>)?.map(StateEfileStatusDetailFromJSON)),
        'postalMailStatus': !exists(json, 'postalMailStatus') ? undefined : Form1099StatusDetailFromJSON(json['postalMailStatus']),
        'tinMatchStatus': !exists(json, 'tinMatchStatus') ? undefined : Form1099StatusDetailFromJSON(json['tinMatchStatus']),
        'addressVerificationStatus': !exists(json, 'addressVerificationStatus') ? undefined : Form1099StatusDetailFromJSON(json['addressVerificationStatus']),
        'eDeliveryStatus': !exists(json, 'eDeliveryStatus') ? undefined : Form1099StatusDetailFromJSON(json['eDeliveryStatus']),
        'validationErrors': !exists(json, 'validationErrors') ? undefined : (json['validationErrors'] === null ? null : (json['validationErrors'] as Array<any>)?.map(ValidationErrorFromJSON)),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function Form1099DivToJSON(value?: Form1099Div | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalOrdinaryDividends': value.totalOrdinaryDividends,
        'qualifiedDividends': value.qualifiedDividends,
        'totalCapitalGainDistributions': value.totalCapitalGainDistributions,
        'unrecapturedSection1250Gain': value.unrecapturedSection1250Gain,
        'section1202Gain': value.section1202Gain,
        'collectiblesGain': value.collectiblesGain,
        'section897OrdinaryDividends': value.section897OrdinaryDividends,
        'section897CapitalGain': value.section897CapitalGain,
        'nondividendDistributions': value.nondividendDistributions,
        'federalIncomeTaxWithheld': value.federalIncomeTaxWithheld,
        'section199ADividends': value.section199ADividends,
        'investmentExpenses': value.investmentExpenses,
        'foreignTaxPaid': value.foreignTaxPaid,
        'foreignCountryOrUSPossession': value.foreignCountryOrUSPossession,
        'cashLiquidationDistributions': value.cashLiquidationDistributions,
        'noncashLiquidationDistributions': value.noncashLiquidationDistributions,
        'exemptInterestDividends': value.exemptInterestDividends,
        'specifiedPrivateActivityBondInterestDividends': value.specifiedPrivateActivityBondInterestDividends,
        'fatcaFilingRequirement': value.fatcaFilingRequirement,
        'type': value.type,
        'issuerId': value.issuerId,
        'issuerReferenceId': value.issuerReferenceId,
        'issuerTin': value.issuerTin,
        'taxYear': value.taxYear,
        'referenceId': value.referenceId,
        'tin': value.tin,
        'recipientName': value.recipientName,
        'tinType': value.tinType,
        'recipientSecondName': value.recipientSecondName,
        'address': value.address,
        'address2': value.address2,
        'city': value.city,
        'state': value.state,
        'zip': value.zip,
        'email': value.email,
        'accountNumber': value.accountNumber,
        'officeCode': value.officeCode,
        'nonUsProvince': value.nonUsProvince,
        'countryCode': value.countryCode,
        'federalEfileDate': value.federalEfileDate === undefined ? undefined : (value.federalEfileDate === null ? null : value.federalEfileDate.toISOString().substr(0,10)),
        'postalMail': value.postalMail,
        'stateEfileDate': value.stateEfileDate === undefined ? undefined : (value.stateEfileDate === null ? null : value.stateEfileDate.toISOString().substr(0,10)),
        'recipientEdeliveryDate': value.recipientEdeliveryDate === undefined ? undefined : (value.recipientEdeliveryDate === null ? null : value.recipientEdeliveryDate.toISOString().substr(0,10)),
        'tinMatch': value.tinMatch,
        'noTin': value.noTin,
        'addressVerification': value.addressVerification,
        'stateAndLocalWithholding': StateAndLocalWithholdingToJSON(value.stateAndLocalWithholding),
        'secondTinNotice': value.secondTinNotice,
    };
}
