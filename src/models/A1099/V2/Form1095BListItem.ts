/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
import {
    CoveredIndividualRequest,
    CoveredIndividualRequestFromJSON,
    CoveredIndividualRequestFromJSONTyped,
    CoveredIndividualRequestToJSON,
} from './CoveredIndividualRequest';
import {
    StateAndLocalWithholdingRequest,
    StateAndLocalWithholdingRequestFromJSON,
    StateAndLocalWithholdingRequestFromJSONTyped,
    StateAndLocalWithholdingRequestToJSON,
} from './StateAndLocalWithholdingRequest';

/**
 * 
 * @export
 * @interface Form1095BListItem
 */
export interface Form1095BListItem {
    /**
     * Employee's first name
     * @type {string}
     * @memberof Form1095BListItem
     */
    employeeFirstName?: string;
    /**
     * Employee's middle name
     * @type {string}
     * @memberof Form1095BListItem
     */
    employeeMiddleName?: string | null;
    /**
     * Employee's last name
     * @type {string}
     * @memberof Form1095BListItem
     */
    employeeLastName?: string;
    /**
     * Employee's name suffix
     * @type {string}
     * @memberof Form1095BListItem
     */
    employeeNameSuffix?: string | null;
    /**
     * Employee's date of birth
     * @type {Date}
     * @memberof Form1095BListItem
     */
    employeeDateOfBirth?: Date | null;
    /**
     * Origin of health coverage code
     * @type {string}
     * @memberof Form1095BListItem
     */
    originOfHealthCoverageCode?: Form1095BListItemOriginOfHealthCoverageCodeEnum;
    /**
     * Covered individuals information
     * @type {Array<CoveredIndividualRequest>}
     * @memberof Form1095BListItem
     */
    coveredIndividuals?: Array<CoveredIndividualRequest>;
    /**
     * Issuer ID
     * @type {string}
     * @memberof Form1095BListItem
     */
    issuerId?: string | null;
    /**
     * Reference ID
     * @type {string}
     * @memberof Form1095BListItem
     */
    referenceId?: string | null;
    /**
     * Recipient Tax ID Number
     * @type {string}
     * @memberof Form1095BListItem
     */
    recipientTin?: string;
    /**
     * Recipient name
     * @type {string}
     * @memberof Form1095BListItem
     */
    recipientName?: string | null;
    /**
     * Type of TIN (Tax ID Number). Will be one of:
     * * SSN
     * * EIN
     * * ITIN
     * * ATIN
     * @type {string}
     * @memberof Form1095BListItem
     */
    tinType?: Form1095BListItemTinTypeEnum;
    /**
     * Recipient second name
     * @type {string}
     * @memberof Form1095BListItem
     */
    recipientSecondName?: string | null;
    /**
     * Address
     * @type {string}
     * @memberof Form1095BListItem
     */
    address: string;
    /**
     * Address line 2
     * @type {string}
     * @memberof Form1095BListItem
     */
    address2?: string | null;
    /**
     * City
     * @type {string}
     * @memberof Form1095BListItem
     */
    city: string;
    /**
     * US state. Required if CountryCode is "US".
     * @type {string}
     * @memberof Form1095BListItem
     */
    state?: string;
    /**
     * Zip/postal code
     * @type {string}
     * @memberof Form1095BListItem
     */
    zip?: string;
    /**
     * Recipient email address
     * @type {string}
     * @memberof Form1095BListItem
     */
    email?: string | null;
    /**
     * Account number
     * @type {string}
     * @memberof Form1095BListItem
     */
    accountNumber?: string | null;
    /**
     * Office code
     * @type {string}
     * @memberof Form1095BListItem
     */
    officeCode?: string | null;
    /**
     * Foreign province
     * @type {string}
     * @memberof Form1095BListItem
     */
    nonUsProvince?: string | null;
    /**
     * Country code, as defined at https://www.irs.gov/e-file-providers/country-codes
     * @type {string}
     * @memberof Form1095BListItem
     */
    countryCode: string;
    /**
     * Boolean indicating that federal e-filing should be scheduled for this form
     * @type {boolean}
     * @memberof Form1095BListItem
     */
    federalEFile?: boolean;
    /**
     * Boolean indicating that postal mailing to the recipient should be scheduled for this form
     * @type {boolean}
     * @memberof Form1095BListItem
     */
    postalMail?: boolean;
    /**
     * Boolean indicating that state e-filing should be scheduled for this form
     * @type {boolean}
     * @memberof Form1095BListItem
     */
    stateEFile?: boolean;
    /**
     * Boolean indicating that TIN Matching should be scheduled for this form
     * @type {boolean}
     * @memberof Form1095BListItem
     */
    tinMatch?: boolean;
    /**
     * Indicates whether the recipient has no TIN
     * @type {boolean}
     * @memberof Form1095BListItem
     */
    noTin?: boolean;
    /**
     * Second TIN notice in three years
     * @type {boolean}
     * @memberof Form1095BListItem
     */
    secondTinNotice?: boolean | null;
    /**
     * Boolean indicating that address verification should be scheduled for this form
     * @type {boolean}
     * @memberof Form1095BListItem
     */
    addressVerification?: boolean;
    /**
     * State and local withholding information
     * @type {StateAndLocalWithholdingRequest}
     * @memberof Form1095BListItem
     */
    stateAndLocalWithholding?: StateAndLocalWithholdingRequest | null;
}

/**
* @export
* @enum {string}
*/
export enum Form1095BListItemOriginOfHealthCoverageCodeEnum {
    A = 'A',
    B = 'B',
    C = 'C',
    D = 'D',
    E = 'E',
    F = 'F',
    G = 'G'
}/**
* @export
* @enum {string}
*/
export enum Form1095BListItemTinTypeEnum {
    Ein = 'EIN',
    Ssn = 'SSN',
    Itin = 'ITIN',
    Atin = 'ATIN'
}

/**
 * Check if a given object implements the Form1095BListItem interface.
 */
export function instanceOfForm1095BListItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "city" in value;
    isInstance = isInstance && "countryCode" in value;

    return isInstance;
}

export function Form1095BListItemFromJSON(json: any): Form1095BListItem {
    return Form1095BListItemFromJSONTyped(json, false);
}

export function Form1095BListItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): Form1095BListItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'employeeFirstName': !exists(json, 'employeeFirstName') ? undefined : json['employeeFirstName'],
        'employeeMiddleName': !exists(json, 'employeeMiddleName') ? undefined : json['employeeMiddleName'],
        'employeeLastName': !exists(json, 'employeeLastName') ? undefined : json['employeeLastName'],
        'employeeNameSuffix': !exists(json, 'employeeNameSuffix') ? undefined : json['employeeNameSuffix'],
        'employeeDateOfBirth': !exists(json, 'employeeDateOfBirth') ? undefined : (json['employeeDateOfBirth'] === null ? null : new Date(json['employeeDateOfBirth'])),
        'originOfHealthCoverageCode': !exists(json, 'originOfHealthCoverageCode') ? undefined : json['originOfHealthCoverageCode'],
        'coveredIndividuals': !exists(json, 'coveredIndividuals') ? undefined : ((json['coveredIndividuals'] as Array<any>)?.map(CoveredIndividualRequestFromJSON)),
        'issuerId': !exists(json, 'issuerId') ? undefined : json['issuerId'],
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
        'recipientTin': !exists(json, 'recipientTin') ? undefined : json['recipientTin'],
        'recipientName': !exists(json, 'recipientName') ? undefined : json['recipientName'],
        'tinType': !exists(json, 'tinType') ? undefined : json['tinType'],
        'recipientSecondName': !exists(json, 'recipientSecondName') ? undefined : json['recipientSecondName'],
        'address': json['address'],
        'address2': !exists(json, 'address2') ? undefined : json['address2'],
        'city': json['city'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'zip': !exists(json, 'zip') ? undefined : json['zip'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'accountNumber': !exists(json, 'accountNumber') ? undefined : json['accountNumber'],
        'officeCode': !exists(json, 'officeCode') ? undefined : json['officeCode'],
        'nonUsProvince': !exists(json, 'nonUsProvince') ? undefined : json['nonUsProvince'],
        'countryCode': json['countryCode'],
        'federalEFile': !exists(json, 'federalEFile') ? undefined : json['federalEFile'],
        'postalMail': !exists(json, 'postalMail') ? undefined : json['postalMail'],
        'stateEFile': !exists(json, 'stateEFile') ? undefined : json['stateEFile'],
        'tinMatch': !exists(json, 'tinMatch') ? undefined : json['tinMatch'],
        'noTin': !exists(json, 'noTin') ? undefined : json['noTin'],
        'secondTinNotice': !exists(json, 'secondTinNotice') ? undefined : json['secondTinNotice'],
        'addressVerification': !exists(json, 'addressVerification') ? undefined : json['addressVerification'],
        'stateAndLocalWithholding': !exists(json, 'stateAndLocalWithholding') ? undefined : StateAndLocalWithholdingRequestFromJSON(json['stateAndLocalWithholding']),
    };
}

export function Form1095BListItemToJSON(value?: Form1095BListItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'employeeFirstName': value.employeeFirstName,
        'employeeMiddleName': value.employeeMiddleName,
        'employeeLastName': value.employeeLastName,
        'employeeNameSuffix': value.employeeNameSuffix,
        'employeeDateOfBirth': value.employeeDateOfBirth === undefined ? undefined : (value.employeeDateOfBirth === null ? null : value.employeeDateOfBirth.toISOString()),
        'originOfHealthCoverageCode': value.originOfHealthCoverageCode,
        'coveredIndividuals': value.coveredIndividuals === undefined ? undefined : ((value.coveredIndividuals as Array<any>)?.map(CoveredIndividualRequestToJSON)),
        'issuerId': value.issuerId,
        'referenceId': value.referenceId,
        'recipientTin': value.recipientTin,
        'recipientName': value.recipientName,
        'tinType': value.tinType,
        'recipientSecondName': value.recipientSecondName,
        'address': value.address,
        'address2': value.address2,
        'city': value.city,
        'state': value.state,
        'zip': value.zip,
        'email': value.email,
        'accountNumber': value.accountNumber,
        'officeCode': value.officeCode,
        'nonUsProvince': value.nonUsProvince,
        'countryCode': value.countryCode,
        'federalEFile': value.federalEFile,
        'postalMail': value.postalMail,
        'stateEFile': value.stateEFile,
        'tinMatch': value.tinMatch,
        'noTin': value.noTin,
        'secondTinNotice': value.secondTinNotice,
        'addressVerification': value.addressVerification,
        'stateAndLocalWithholding': StateAndLocalWithholdingRequestToJSON(value.stateAndLocalWithholding),
    };
}
