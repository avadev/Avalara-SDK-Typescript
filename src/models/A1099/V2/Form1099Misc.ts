/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
import {
    Form1099StatusDetail,
    Form1099StatusDetailFromJSON,
    Form1099StatusDetailFromJSONTyped,
    Form1099StatusDetailToJSON,
} from './Form1099StatusDetail';
import {
    StateAndLocalWithholding,
    StateAndLocalWithholdingFromJSON,
    StateAndLocalWithholdingFromJSONTyped,
    StateAndLocalWithholdingToJSON,
} from './StateAndLocalWithholding';
import {
    StateEfileStatusDetail,
    StateEfileStatusDetailFromJSON,
    StateEfileStatusDetailFromJSONTyped,
    StateEfileStatusDetailToJSON,
} from './StateEfileStatusDetail';
import {
    ValidationError,
    ValidationErrorFromJSON,
    ValidationErrorFromJSONTyped,
    ValidationErrorToJSON,
} from './ValidationError';

/**
 * 
 * @export
 * @interface Form1099Misc
 */
export interface Form1099Misc {
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    rents?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    royalties?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    otherIncome?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    fedIncomeTaxWithheld?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    fishingBoatProceeds?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    medicalAndHealthCarePayments?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    substitutePayments?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof Form1099Misc
     */
    directSalesIndicator?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    cropInsuranceProceeds?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    excessGoldenParachutePayments?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    grossProceedsPaidToAttorney?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    fishPurchasedForResale?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    section409ADeferrals?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    nonqualifiedDeferredCompensation?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    type?: string;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    issuerId?: number;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    issuerReferenceId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    issuerTin?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Form1099Misc
     */
    taxYear?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Form1099Misc
     */
    federalEfile?: boolean;
    /**
     * 
     * @type {Form1099StatusDetail}
     * @memberof Form1099Misc
     */
    federalEfileStatus?: Form1099StatusDetail;
    /**
     * 
     * @type {boolean}
     * @memberof Form1099Misc
     */
    stateEfile?: boolean;
    /**
     * 
     * @type {Array<StateEfileStatusDetail>}
     * @memberof Form1099Misc
     */
    stateEfileStatus?: Array<StateEfileStatusDetail> | null;
    /**
     * 
     * @type {boolean}
     * @memberof Form1099Misc
     */
    postalMail?: boolean;
    /**
     * 
     * @type {Form1099StatusDetail}
     * @memberof Form1099Misc
     */
    postalMailStatus?: Form1099StatusDetail | null;
    /**
     * 
     * @type {boolean}
     * @memberof Form1099Misc
     */
    tinMatch?: boolean;
    /**
     * 
     * @type {Form1099StatusDetail}
     * @memberof Form1099Misc
     */
    tinMatchStatus?: Form1099StatusDetail | null;
    /**
     * 
     * @type {boolean}
     * @memberof Form1099Misc
     */
    addressVerification?: boolean;
    /**
     * 
     * @type {Form1099StatusDetail}
     * @memberof Form1099Misc
     */
    addressVerificationStatus?: Form1099StatusDetail | null;
    /**
     * 
     * @type {Form1099StatusDetail}
     * @memberof Form1099Misc
     */
    eDeliveryStatus?: Form1099StatusDetail | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    referenceId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    tinType?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Form1099Misc
     */
    fatcaFilingRequirement?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    tin?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Form1099Misc
     */
    noTin?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Form1099Misc
     */
    secondTinNotice?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    recipientName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    recipientSecondName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    address?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    address2?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    city?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    state?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    zip?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    nonUsProvince?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    countryCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    accountNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Form1099Misc
     */
    officeCode?: string | null;
    /**
     * 
     * @type {Array<ValidationError>}
     * @memberof Form1099Misc
     */
    validationErrors?: Array<ValidationError> | null;
    /**
     * 
     * @type {Date}
     * @memberof Form1099Misc
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Form1099Misc
     */
    updatedAt?: Date;
    /**
     * 
     * @type {StateAndLocalWithholding}
     * @memberof Form1099Misc
     */
    stateAndLocalWithholding?: StateAndLocalWithholding | null;
}



/**
 * Check if a given object implements the Form1099Misc interface.
 */
export function instanceOfForm1099Misc(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function Form1099MiscFromJSON(json: any): Form1099Misc {
    return Form1099MiscFromJSONTyped(json, false);
}

export function Form1099MiscFromJSONTyped(json: any, ignoreDiscriminator: boolean): Form1099Misc {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rents': !exists(json, 'rents') ? undefined : json['rents'],
        'royalties': !exists(json, 'royalties') ? undefined : json['royalties'],
        'otherIncome': !exists(json, 'otherIncome') ? undefined : json['otherIncome'],
        'fedIncomeTaxWithheld': !exists(json, 'fedIncomeTaxWithheld') ? undefined : json['fedIncomeTaxWithheld'],
        'fishingBoatProceeds': !exists(json, 'fishingBoatProceeds') ? undefined : json['fishingBoatProceeds'],
        'medicalAndHealthCarePayments': !exists(json, 'medicalAndHealthCarePayments') ? undefined : json['medicalAndHealthCarePayments'],
        'substitutePayments': !exists(json, 'substitutePayments') ? undefined : json['substitutePayments'],
        'directSalesIndicator': !exists(json, 'directSalesIndicator') ? undefined : json['directSalesIndicator'],
        'cropInsuranceProceeds': !exists(json, 'cropInsuranceProceeds') ? undefined : json['cropInsuranceProceeds'],
        'excessGoldenParachutePayments': !exists(json, 'excessGoldenParachutePayments') ? undefined : json['excessGoldenParachutePayments'],
        'grossProceedsPaidToAttorney': !exists(json, 'grossProceedsPaidToAttorney') ? undefined : json['grossProceedsPaidToAttorney'],
        'fishPurchasedForResale': !exists(json, 'fishPurchasedForResale') ? undefined : json['fishPurchasedForResale'],
        'section409ADeferrals': !exists(json, 'section409ADeferrals') ? undefined : json['section409ADeferrals'],
        'nonqualifiedDeferredCompensation': !exists(json, 'nonqualifiedDeferredCompensation') ? undefined : json['nonqualifiedDeferredCompensation'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'issuerId': !exists(json, 'issuerId') ? undefined : json['issuerId'],
        'issuerReferenceId': !exists(json, 'issuerReferenceId') ? undefined : json['issuerReferenceId'],
        'issuerTin': !exists(json, 'issuerTin') ? undefined : json['issuerTin'],
        'taxYear': !exists(json, 'taxYear') ? undefined : json['taxYear'],
        'federalEfile': !exists(json, 'federalEfile') ? undefined : json['federalEfile'],
        'federalEfileStatus': !exists(json, 'federalEfileStatus') ? undefined : Form1099StatusDetailFromJSON(json['federalEfileStatus']),
        'stateEfile': !exists(json, 'stateEfile') ? undefined : json['stateEfile'],
        'stateEfileStatus': !exists(json, 'stateEfileStatus') ? undefined : (json['stateEfileStatus'] === null ? null : (json['stateEfileStatus'] as Array<any>)?.map(StateEfileStatusDetailFromJSON)),
        'postalMail': !exists(json, 'postalMail') ? undefined : json['postalMail'],
        'postalMailStatus': !exists(json, 'postalMailStatus') ? undefined : Form1099StatusDetailFromJSON(json['postalMailStatus']),
        'tinMatch': !exists(json, 'tinMatch') ? undefined : json['tinMatch'],
        'tinMatchStatus': !exists(json, 'tinMatchStatus') ? undefined : Form1099StatusDetailFromJSON(json['tinMatchStatus']),
        'addressVerification': !exists(json, 'addressVerification') ? undefined : json['addressVerification'],
        'addressVerificationStatus': !exists(json, 'addressVerificationStatus') ? undefined : Form1099StatusDetailFromJSON(json['addressVerificationStatus']),
        'eDeliveryStatus': !exists(json, 'eDeliveryStatus') ? undefined : Form1099StatusDetailFromJSON(json['eDeliveryStatus']),
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'tinType': !exists(json, 'tinType') ? undefined : json['tinType'],
        'fatcaFilingRequirement': !exists(json, 'fatcaFilingRequirement') ? undefined : json['fatcaFilingRequirement'],
        'tin': !exists(json, 'tin') ? undefined : json['tin'],
        'noTin': !exists(json, 'noTin') ? undefined : json['noTin'],
        'secondTinNotice': !exists(json, 'secondTinNotice') ? undefined : json['secondTinNotice'],
        'recipientName': !exists(json, 'recipientName') ? undefined : json['recipientName'],
        'recipientSecondName': !exists(json, 'recipientSecondName') ? undefined : json['recipientSecondName'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'address2': !exists(json, 'address2') ? undefined : json['address2'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'zip': !exists(json, 'zip') ? undefined : json['zip'],
        'nonUsProvince': !exists(json, 'nonUsProvince') ? undefined : json['nonUsProvince'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'accountNumber': !exists(json, 'accountNumber') ? undefined : json['accountNumber'],
        'officeCode': !exists(json, 'officeCode') ? undefined : json['officeCode'],
        'validationErrors': !exists(json, 'validationErrors') ? undefined : (json['validationErrors'] === null ? null : (json['validationErrors'] as Array<any>)?.map(ValidationErrorFromJSON)),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'stateAndLocalWithholding': !exists(json, 'stateAndLocalWithholding') ? undefined : StateAndLocalWithholdingFromJSON(json['stateAndLocalWithholding']),
    };
}

export function Form1099MiscToJSON(value?: Form1099Misc | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rents': value.rents,
        'royalties': value.royalties,
        'otherIncome': value.otherIncome,
        'fedIncomeTaxWithheld': value.fedIncomeTaxWithheld,
        'fishingBoatProceeds': value.fishingBoatProceeds,
        'medicalAndHealthCarePayments': value.medicalAndHealthCarePayments,
        'substitutePayments': value.substitutePayments,
        'directSalesIndicator': value.directSalesIndicator,
        'cropInsuranceProceeds': value.cropInsuranceProceeds,
        'excessGoldenParachutePayments': value.excessGoldenParachutePayments,
        'grossProceedsPaidToAttorney': value.grossProceedsPaidToAttorney,
        'fishPurchasedForResale': value.fishPurchasedForResale,
        'section409ADeferrals': value.section409ADeferrals,
        'nonqualifiedDeferredCompensation': value.nonqualifiedDeferredCompensation,
        'id': value.id,
        'type': value.type,
        'issuerId': value.issuerId,
        'issuerReferenceId': value.issuerReferenceId,
        'issuerTin': value.issuerTin,
        'taxYear': value.taxYear,
        'federalEfile': value.federalEfile,
        'federalEfileStatus': Form1099StatusDetailToJSON(value.federalEfileStatus),
        'stateEfile': value.stateEfile,
        'stateEfileStatus': value.stateEfileStatus === undefined ? undefined : (value.stateEfileStatus === null ? null : (value.stateEfileStatus as Array<any>)?.map(StateEfileStatusDetailToJSON)),
        'postalMail': value.postalMail,
        'postalMailStatus': Form1099StatusDetailToJSON(value.postalMailStatus),
        'tinMatch': value.tinMatch,
        'tinMatchStatus': Form1099StatusDetailToJSON(value.tinMatchStatus),
        'addressVerification': value.addressVerification,
        'addressVerificationStatus': Form1099StatusDetailToJSON(value.addressVerificationStatus),
        'eDeliveryStatus': Form1099StatusDetailToJSON(value.eDeliveryStatus),
        'referenceId': value.referenceId,
        'email': value.email,
        'tinType': value.tinType,
        'fatcaFilingRequirement': value.fatcaFilingRequirement,
        'tin': value.tin,
        'noTin': value.noTin,
        'secondTinNotice': value.secondTinNotice,
        'recipientName': value.recipientName,
        'recipientSecondName': value.recipientSecondName,
        'address': value.address,
        'address2': value.address2,
        'city': value.city,
        'state': value.state,
        'zip': value.zip,
        'nonUsProvince': value.nonUsProvince,
        'countryCode': value.countryCode,
        'accountNumber': value.accountNumber,
        'officeCode': value.officeCode,
        'validationErrors': value.validationErrors === undefined ? undefined : (value.validationErrors === null ? null : (value.validationErrors as Array<any>)?.map(ValidationErrorToJSON)),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'stateAndLocalWithholding': StateAndLocalWithholdingToJSON(value.stateAndLocalWithholding),
    };
}
