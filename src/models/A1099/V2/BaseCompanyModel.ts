/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Use **username/password** or generate a **license key** from: *Avalara Portal ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
/**
 * 
 * @export
 * @interface BaseCompanyModel
 */
export interface BaseCompanyModel {
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    zip?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    telephone?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    tin?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    dbaName?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    referenceId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BaseCompanyModel
     */
    doTinMatch?: boolean;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    groupName?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    foreignProvince?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseCompanyModel
     */
    countryCode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BaseCompanyModel
     */
    resendRequests?: boolean;
    /**
     * 
     * @type {number}
     * @memberof BaseCompanyModel
     */
    resendIntervalDays?: number | null;
    /**
     * 
     * @type {number}
     * @memberof BaseCompanyModel
     */
    maxReminderAttempts?: number | null;
}



/**
 * Check if a given object implements the BaseCompanyModel interface.
 */
export function instanceOfBaseCompanyModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BaseCompanyModelFromJSON(json: any): BaseCompanyModel {
    return BaseCompanyModelFromJSONTyped(json, false);
}

export function BaseCompanyModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseCompanyModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'zip': !exists(json, 'zip') ? undefined : json['zip'],
        'telephone': !exists(json, 'telephone') ? undefined : json['telephone'],
        'tin': !exists(json, 'tin') ? undefined : json['tin'],
        'dbaName': !exists(json, 'dbaName') ? undefined : json['dbaName'],
        'referenceId': !exists(json, 'referenceId') ? undefined : json['referenceId'],
        'doTinMatch': !exists(json, 'doTinMatch') ? undefined : json['doTinMatch'],
        'groupName': !exists(json, 'groupName') ? undefined : json['groupName'],
        'foreignProvince': !exists(json, 'foreignProvince') ? undefined : json['foreignProvince'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'resendRequests': !exists(json, 'resendRequests') ? undefined : json['resendRequests'],
        'resendIntervalDays': !exists(json, 'resendIntervalDays') ? undefined : json['resendIntervalDays'],
        'maxReminderAttempts': !exists(json, 'maxReminderAttempts') ? undefined : json['maxReminderAttempts'],
    };
}

export function BaseCompanyModelToJSON(value?: BaseCompanyModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'email': value.email,
        'address': value.address,
        'city': value.city,
        'state': value.state,
        'zip': value.zip,
        'telephone': value.telephone,
        'tin': value.tin,
        'dbaName': value.dbaName,
        'referenceId': value.referenceId,
        'doTinMatch': value.doTinMatch,
        'groupName': value.groupName,
        'foreignProvince': value.foreignProvince,
        'countryCode': value.countryCode,
        'resendRequests': value.resendRequests,
        'resendIntervalDays': value.resendIntervalDays,
        'maxReminderAttempts': value.maxReminderAttempts,
    };
}
