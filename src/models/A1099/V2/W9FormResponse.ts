/* tslint:disable */
/* eslint-disable */
/**
 * Avalara 1099 & W-9 API Definition
 * ## üîê Authentication  Generate a **license key** from: *[Avalara Portal](https://www.avalara.com/us/en/signin.html) ‚Üí Settings ‚Üí License and API Keys*.  [More on authentication methods](https://developer.avalara.com/avatax-dm-combined-erp/common-setup/authentication/authentication-methods/)  [Test your credentials](https://developer.avalara.com/avatax/test-credentials/)  ## üìò API & SDK Documentation  [Avalara SDK (.NET) on GitHub](https://github.com/avadev/Avalara-SDK-DotNet#avalarasdk--the-unified-c-library-for-next-gen-avalara-services)  [Code Examples ‚Äì 1099 API](https://github.com/avadev/Avalara-SDK-DotNet/blob/main/docs/A1099/V2/Class1099IssuersApi.md#call1099issuersget)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@avalara.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../../../runtime';
import {
    EntryStatusResponse,
    EntryStatusResponseFromJSON,
    EntryStatusResponseFromJSONTyped,
    EntryStatusResponseToJSON,
} from './EntryStatusResponse';
import {
    TinMatchStatusResponse,
    TinMatchStatusResponseFromJSON,
    TinMatchStatusResponseFromJSONTyped,
    TinMatchStatusResponseToJSON,
} from './TinMatchStatusResponse';
import {
    W9FormBaseResponse,
    W9FormBaseResponseFromJSON,
    W9FormBaseResponseFromJSONTyped,
    W9FormBaseResponseToJSON,
} from './W9FormBaseResponse';

/**
 * 
 * @export
 * @interface W9FormResponse
 */
export interface W9FormResponse extends W9FormBaseResponse {
    /**
     * The name of the individual or entity associated with the form.
     * @type {string}
     * @memberof W9FormResponse
     */
    name?: string;
    /**
     * The name of the business associated with the form.
     * @type {string}
     * @memberof W9FormResponse
     */
    businessName?: string | null;
    /**
     * The classification of the business.
     * @type {string}
     * @memberof W9FormResponse
     */
    businessClassification?: string;
    /**
     * The classification description when "businessClassification" is "Other".
     * @type {string}
     * @memberof W9FormResponse
     */
    businessOther?: string | null;
    /**
     * Indicates whether the individual is a foreign partner, owner, or beneficiary.
     * @type {boolean}
     * @memberof W9FormResponse
     */
    foreignPartnerOwnerOrBeneficiary?: boolean;
    /**
     * The exempt payee code.
     * @type {string}
     * @memberof W9FormResponse
     */
    exemptPayeeCode?: string | null;
    /**
     * The exemption from FATCA reporting code.
     * @type {string}
     * @memberof W9FormResponse
     */
    exemptFatcaCode?: string | null;
    /**
     * Indicates whether the individual or entity is in a foreign country.
     * @type {boolean}
     * @memberof W9FormResponse
     */
    foreignCountryIndicator?: boolean;
    /**
     * The address of the individual or entity.
     * @type {string}
     * @memberof W9FormResponse
     */
    address?: string;
    /**
     * The foreign address of the individual or entity.
     * @type {string}
     * @memberof W9FormResponse
     */
    foreignAddress?: string | null;
    /**
     * The city of the address.
     * @type {string}
     * @memberof W9FormResponse
     */
    city?: string | null;
    /**
     * The state of the address.
     * @type {string}
     * @memberof W9FormResponse
     */
    state?: string | null;
    /**
     * The ZIP code of the address.
     * @type {string}
     * @memberof W9FormResponse
     */
    zip?: string | null;
    /**
     * The account number associated with the form.
     * @type {string}
     * @memberof W9FormResponse
     */
    accountNumber?: string | null;
    /**
     * The type of TIN provided.
     * @type {string}
     * @memberof W9FormResponse
     */
    tinType?: string;
    /**
     * The taxpayer identification number (TIN).
     * @type {string}
     * @memberof W9FormResponse
     */
    tin?: string;
    /**
     * Indicates whether backup withholding applies.
     * @type {boolean}
     * @memberof W9FormResponse
     */
    backupWithholding?: boolean;
    /**
     * Indicates whether the individual or entity should be issued a 1099 form.
     * @type {boolean}
     * @memberof W9FormResponse
     */
    is1099able?: boolean;
    /**
     * The TIN Match status from IRS.
     * @type {TinMatchStatusResponse}
     * @memberof W9FormResponse
     */
    tinMatchStatus?: TinMatchStatusResponse;
}



/**
 * Check if a given object implements the W9FormResponse interface.
 */
export function instanceOfW9FormResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function W9FormResponseFromJSON(json: any): W9FormResponse {
    return W9FormResponseFromJSONTyped(json, false);
}

export function W9FormResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): W9FormResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        ...W9FormBaseResponseFromJSONTyped(json, ignoreDiscriminator),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'businessName': !exists(json, 'businessName') ? undefined : json['businessName'],
        'businessClassification': !exists(json, 'businessClassification') ? undefined : json['businessClassification'],
        'businessOther': !exists(json, 'businessOther') ? undefined : json['businessOther'],
        'foreignPartnerOwnerOrBeneficiary': !exists(json, 'foreignPartnerOwnerOrBeneficiary') ? undefined : json['foreignPartnerOwnerOrBeneficiary'],
        'exemptPayeeCode': !exists(json, 'exemptPayeeCode') ? undefined : json['exemptPayeeCode'],
        'exemptFatcaCode': !exists(json, 'exemptFatcaCode') ? undefined : json['exemptFatcaCode'],
        'foreignCountryIndicator': !exists(json, 'foreignCountryIndicator') ? undefined : json['foreignCountryIndicator'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'foreignAddress': !exists(json, 'foreignAddress') ? undefined : json['foreignAddress'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'zip': !exists(json, 'zip') ? undefined : json['zip'],
        'accountNumber': !exists(json, 'accountNumber') ? undefined : json['accountNumber'],
        'tinType': !exists(json, 'tinType') ? undefined : json['tinType'],
        'tin': !exists(json, 'tin') ? undefined : json['tin'],
        'backupWithholding': !exists(json, 'backupWithholding') ? undefined : json['backupWithholding'],
        'is1099able': !exists(json, 'is1099able') ? undefined : json['is1099able'],
        'tinMatchStatus': !exists(json, 'tinMatchStatus') ? undefined : TinMatchStatusResponseFromJSON(json['tinMatchStatus']),
    };
}

export function W9FormResponseToJSON(value?: W9FormResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        ...W9FormBaseResponseToJSON(value),
        'name': value.name,
        'businessName': value.businessName,
        'businessClassification': value.businessClassification,
        'businessOther': value.businessOther,
        'foreignPartnerOwnerOrBeneficiary': value.foreignPartnerOwnerOrBeneficiary,
        'exemptPayeeCode': value.exemptPayeeCode,
        'exemptFatcaCode': value.exemptFatcaCode,
        'foreignCountryIndicator': value.foreignCountryIndicator,
        'address': value.address,
        'foreignAddress': value.foreignAddress,
        'city': value.city,
        'state': value.state,
        'zip': value.zip,
        'accountNumber': value.accountNumber,
        'tinType': value.tinType,
        'tin': value.tin,
        'backupWithholding': value.backupWithholding,
        'is1099able': value.is1099able,
        'tinMatchStatus': TinMatchStatusResponseToJSON(value.tinMatchStatus),
    };
}
